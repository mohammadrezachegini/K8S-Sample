apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 0a130131272f628666273014c2e59495b2bbe7be2de5082100037ac64e65fc62
      cni.projectcalico.org/podIP: 10.10.219.79/32
      cni.projectcalico.org/podIPs: 10.10.219.79/32
      tigera-operator.hash.operator.tigera.io/calico-apiserver-certs: db71ef27acfbbe899da98686c2845f13eb3410b2
    creationTimestamp: "2024-02-14T02:14:34Z"
    generateName: calico-apiserver-fbdc69d9b-
    labels:
      apiserver: "true"
      app.kubernetes.io/name: calico-apiserver
      k8s-app: calico-apiserver
      pod-template-hash: fbdc69d9b
    name: calico-apiserver-fbdc69d9b-nmbxd
    namespace: calico-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: calico-apiserver-fbdc69d9b
      uid: ace021ba-56fd-4a33-9f68-868f94874adf
    resourceVersion: "24904"
    uid: d8656227-4d04-442a-b759-45256f3e43a0
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                k8s-app: calico-apiserver
            namespaces:
            - calico-apiserver
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                k8s-app: calico-apiserver
            namespaces:
            - calico-apiserver
            topologyKey: topology.kubernetes.io/zone
          weight: 100
    containers:
    - args:
      - --secure-port=5443
      - --tls-private-key-file=/calico-apiserver-certs/tls.key
      - --tls-cert-file=/calico-apiserver-certs/tls.crt
      env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: KUBERNETES_SERVICE_HOST
        value: 10.96.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "443"
      - name: MULTI_INTERFACE_MODE
        value: none
      image: docker.io/calico/apiserver:v3.27.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /version
          port: 5443
          scheme: HTTPS
        initialDelaySeconds: 90
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-apiserver
      readinessProbe:
        exec:
          command:
          - /code/filecheck
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /calico-apiserver-certs
        name: calico-apiserver-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m8z6g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-apiserver
    serviceAccountName: calico-apiserver
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: calico-apiserver-certs
      secret:
        defaultMode: 420
        secretName: calico-apiserver-certs
    - name: kube-api-access-m8z6g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:14:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:14:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3886b79ab83a3ae5e98ef52ddd95885def17ab8a5c21e527f26b41dff8d625da
      image: docker.io/calico/apiserver:v3.27.0
      imageID: docker.io/calico/apiserver@sha256:b2a86494504e18a1eecd136a6bb60508ec89223f33ddeeba1d296a30fb27d90b
      lastState:
        terminated:
          containerID: containerd://cc574bd017772927509ad20ddce1c4662ff74a8bc3d4c353761ec6c5e62f382b
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:40:52Z"
      name: calico-apiserver
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:40Z"
    hostIP: 192.168.64.18
    phase: Running
    podIP: 10.10.219.79
    podIPs:
    - ip: 10.10.219.79
    qosClass: BestEffort
    startTime: "2024-02-14T02:14:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 35a96bfc9f9fa846ea09e64799fa0d218c2664bca444f28d0dfc736d4c55cddf
      cni.projectcalico.org/podIP: 10.10.219.81/32
      cni.projectcalico.org/podIPs: 10.10.219.81/32
      tigera-operator.hash.operator.tigera.io/calico-apiserver-certs: db71ef27acfbbe899da98686c2845f13eb3410b2
    creationTimestamp: "2024-02-14T03:35:43Z"
    generateName: calico-apiserver-fbdc69d9b-
    labels:
      apiserver: "true"
      app.kubernetes.io/name: calico-apiserver
      k8s-app: calico-apiserver
      pod-template-hash: fbdc69d9b
    name: calico-apiserver-fbdc69d9b-p876n
    namespace: calico-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: calico-apiserver-fbdc69d9b
      uid: ace021ba-56fd-4a33-9f68-868f94874adf
    resourceVersion: "25038"
    uid: 936d8a4e-8c85-4b76-8cc1-7585992ef9ba
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                k8s-app: calico-apiserver
            namespaces:
            - calico-apiserver
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                k8s-app: calico-apiserver
            namespaces:
            - calico-apiserver
            topologyKey: topology.kubernetes.io/zone
          weight: 100
    containers:
    - args:
      - --secure-port=5443
      - --tls-private-key-file=/calico-apiserver-certs/tls.key
      - --tls-cert-file=/calico-apiserver-certs/tls.crt
      env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: KUBERNETES_SERVICE_HOST
        value: 10.96.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "443"
      - name: MULTI_INTERFACE_MODE
        value: none
      image: docker.io/calico/apiserver:v3.27.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /version
          port: 5443
          scheme: HTTPS
        initialDelaySeconds: 90
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-apiserver
      readinessProbe:
        exec:
          command:
          - /code/filecheck
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /calico-apiserver-certs
        name: calico-apiserver-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9nbfn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-apiserver
    serviceAccountName: calico-apiserver
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: calico-apiserver-certs
      secret:
        defaultMode: 420
        secretName: calico-apiserver-certs
    - name: kube-api-access-9nbfn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:35:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:35:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0f2026035d4aac07f4b6a67c42cd1b93f158a419193ad045e919f2fbc29e275a
      image: docker.io/calico/apiserver:v3.27.0
      imageID: docker.io/calico/apiserver@sha256:b2a86494504e18a1eecd136a6bb60508ec89223f33ddeeba1d296a30fb27d90b
      lastState:
        terminated:
          containerID: containerd://74cdbf39dd2f62fcd83910039841bb00c40dec0fad0548e0bf2400cc679f0bdb
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:40:52Z"
      name: calico-apiserver
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:40Z"
    hostIP: 192.168.64.18
    phase: Running
    podIP: 10.10.219.81
    podIPs:
    - ip: 10.10.219.81
    qosClass: BestEffort
    startTime: "2024-02-14T03:35:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: f70132d8ebc1dfc4cfd96271a59933e86b14a0d58bb72f656a50e76308c60768
      cni.projectcalico.org/podIP: 10.10.219.80/32
      cni.projectcalico.org/podIPs: 10.10.219.80/32
      hash.operator.tigera.io/system: fdde45054a8ae4f629960ce37570929502e59449
      tigera-operator.hash.operator.tigera.io/tigera-ca-private: ab2cf664664ba80e9d276b6e112bb6990c244692
    creationTimestamp: "2024-02-14T02:13:28Z"
    generateName: calico-kube-controllers-588c6b944d-
    labels:
      app.kubernetes.io/name: calico-kube-controllers
      k8s-app: calico-kube-controllers
      pod-template-hash: 588c6b944d
    name: calico-kube-controllers-588c6b944d-8q96b
    namespace: calico-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: calico-kube-controllers-588c6b944d
      uid: 28ad36bd-c781-4727-b5a0-dda22cf4390f
    resourceVersion: "24869"
    uid: 48fabd6d-9a03-4d0a-ad0a-9ac71f99d5b9
  spec:
    containers:
    - env:
      - name: KUBE_CONTROLLERS_CONFIG_NAME
        value: default
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: ENABLED_CONTROLLERS
        value: node
      - name: FIPS_MODE_ENABLED
        value: "false"
      - name: KUBERNETES_SERVICE_HOST
        value: 10.96.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "443"
      - name: CA_CRT_PATH
        value: /etc/pki/tls/certs/tigera-ca-bundle.crt
      image: docker.io/calico/kube-controllers:v3.27.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /usr/bin/check-status
          - -l
        failureThreshold: 6
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-kube-controllers
      readinessProbe:
        exec:
          command:
          - /usr/bin/check-status
          - -r
        failureThreshold: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        runAsGroup: 0
        runAsNonRoot: true
        runAsUser: 999
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/pki/tls/certs
        name: tigera-ca-bundle
        readOnly: true
      - mountPath: /etc/pki/tls/cert.pem
        name: tigera-ca-bundle
        readOnly: true
        subPath: ca-bundle.crt
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v2lhz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-kube-controllers
    serviceAccountName: calico-kube-controllers
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: tigera-ca-bundle
      name: tigera-ca-bundle
    - name: kube-api-access-v2lhz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2cc4838d75f36c7f1508b033c837c5b78f4ba7324d184efd50197c7f34eb115a
      image: docker.io/calico/kube-controllers:v3.27.0
      imageID: docker.io/calico/kube-controllers@sha256:76cf681cde3739304381bea506ec8ebf8446a8b6cef4cf9059280363828cee3b
      lastState:
        terminated:
          containerID: containerd://d0d52714c8fea9f4514e164c271426973e00b72dd1f5814c24106ab20723815d
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:40:52Z"
      name: calico-kube-controllers
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:40Z"
    hostIP: 192.168.64.18
    phase: Running
    podIP: 10.10.219.80
    podIPs:
    - ip: 10.10.219.80
    qosClass: BestEffort
    startTime: "2024-02-14T02:13:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      hash.operator.tigera.io/cni-config: 7c3d4f43aed6c9f83376215a5e9a368bef0902a0
      hash.operator.tigera.io/system: fdde45054a8ae4f629960ce37570929502e59449
      tigera-operator.hash.operator.tigera.io/tigera-ca-private: ab2cf664664ba80e9d276b6e112bb6990c244692
    creationTimestamp: "2024-02-14T02:13:28Z"
    generateName: calico-node-
    labels:
      app.kubernetes.io/name: calico-node
      controller-revision-hash: 6464d9c99
      k8s-app: calico-node
      pod-template-generation: "1"
    name: calico-node-x7h6z
    namespace: calico-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: calico-node
      uid: 7c6d80da-dce1-444a-b139-0275e67341f1
    resourceVersion: "25048"
    uid: 73556162-ac30-4b15-852e-a7d809e845c6
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master
    containers:
    - env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: WAIT_FOR_DATASTORE
        value: "true"
      - name: CLUSTER_TYPE
        value: k8s,operator,bgp
      - name: CALICO_DISABLE_FILE_LOGGING
        value: "false"
      - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
        value: ACCEPT
      - name: FELIX_HEALTHENABLED
        value: "true"
      - name: FELIX_HEALTHPORT
        value: "9099"
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: FELIX_TYPHAK8SNAMESPACE
        value: calico-system
      - name: FELIX_TYPHAK8SSERVICENAME
        value: calico-typha
      - name: FELIX_TYPHACAFILE
        value: /etc/pki/tls/certs/tigera-ca-bundle.crt
      - name: FELIX_TYPHACERTFILE
        value: /node-certs/tls.crt
      - name: FELIX_TYPHAKEYFILE
        value: /node-certs/tls.key
      - name: FIPS_MODE_ENABLED
        value: "false"
      - name: FELIX_TYPHACN
        value: typha-server
      - name: CALICO_MANAGE_CNI
        value: "true"
      - name: CALICO_IPV4POOL_CIDR
        value: 10.10.0.0/16
      - name: CALICO_IPV4POOL_VXLAN
        value: CrossSubnet
      - name: CALICO_IPV4POOL_BLOCK_SIZE
        value: "26"
      - name: CALICO_IPV4POOL_NODE_SELECTOR
        value: all()
      - name: CALICO_IPV4POOL_DISABLE_BGP_EXPORT
        value: "false"
      - name: CALICO_NETWORKING_BACKEND
        value: bird
      - name: IP
        value: autodetect
      - name: IP_AUTODETECTION_METHOD
        value: first-found
      - name: IP6
        value: none
      - name: FELIX_IPV6SUPPORT
        value: "false"
      - name: KUBERNETES_SERVICE_HOST
        value: 10.96.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "443"
      image: docker.io/calico/node:v3.27.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/calico-node
            - -shutdown
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /liveness
          port: 9099
          scheme: HTTP
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-node
      readinessProbe:
        exec:
          command:
          - /bin/calico-node
          - -bird-ready
          - -felix-ready
        failureThreshold: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/pki/tls/certs
        name: tigera-ca-bundle
        readOnly: true
      - mountPath: /etc/pki/tls/cert.pem
        name: tigera-ca-bundle
        readOnly: true
        subPath: ca-bundle.crt
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/nodeagent
        name: policysync
      - mountPath: /node-certs
        name: node-certs
        readOnly: true
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hqsr2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - image: docker.io/calico/pod2daemon-flexvol:v3.27.0
      imagePullPolicy: IfNotPresent
      name: flexvol-driver
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/driver
        name: flexvol-driver-host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hqsr2
        readOnly: true
    - command:
      - /opt/cni/bin/install
      env:
      - name: CNI_CONF_NAME
        value: 10-calico.conflist
      - name: SLEEP
        value: "false"
      - name: CNI_NET_DIR
        value: /etc/cni/net.d
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: config
            name: cni-config
      - name: KUBERNETES_SERVICE_HOST
        value: 10.96.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "443"
      image: docker.io/calico/cni:v3.27.0
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hqsr2
        readOnly: true
    nodeName: master
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-node
    serviceAccountName: calico-node
    terminationGracePeriodSeconds: 5
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /var/run/nodeagent
        type: DirectoryOrCreate
      name: policysync
    - configMap:
        defaultMode: 420
        name: tigera-ca-bundle
      name: tigera-ca-bundle
    - name: node-certs
      secret:
        defaultMode: 420
        secretName: node-certs
    - hostPath:
        path: /var/run/calico
        type: ""
      name: var-run-calico
    - hostPath:
        path: /var/lib/calico
        type: ""
      name: var-lib-calico
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/calico/cni
        type: ""
      name: cni-log-dir
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec/nodeagent~uds
        type: DirectoryOrCreate
      name: flexvol-driver-host
    - name: kube-api-access-hqsr2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://362cbf539bf27e9b3b1308321775cead76696363b06959abee702053c581289c
      image: docker.io/calico/node:v3.27.0
      imageID: docker.io/calico/node@sha256:58cd8f6547b4f438f36a1cd7030985f153eca22d78d86dc9cd6f0fe4f32d01bf
      lastState:
        terminated:
          containerID: containerd://7b5996746260dd397f8f9ccd75ae898db76f958f75dbb4de88e3c3c8d9dfa767
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:40:24Z"
      name: calico-node
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:13Z"
    hostIP: 192.168.64.18
    initContainerStatuses:
    - containerID: containerd://68766807c8deb5a5efc8184cb4794313f6c2c9956db9f84e59b7edbbb78bd149
      image: docker.io/calico/pod2daemon-flexvol:v3.27.0
      imageID: docker.io/calico/pod2daemon-flexvol@sha256:d2cab59bf301e59034a80c4374360cab1aab5fa86b8dbe1f4d74fd437acec121
      lastState: {}
      name: flexvol-driver
      ready: true
      restartCount: 2
      started: false
      state:
        terminated:
          containerID: containerd://68766807c8deb5a5efc8184cb4794313f6c2c9956db9f84e59b7edbbb78bd149
          exitCode: 0
          finishedAt: "2024-02-14T22:30:10Z"
          reason: Completed
          startedAt: "2024-02-14T22:30:10Z"
    - containerID: containerd://d6e2b21e367a8cda0c7ca125ddea1e2cefd2c20c1dbcc9dc15cb6ec6f86597ba
      image: docker.io/calico/cni:v3.27.0
      imageID: docker.io/calico/cni@sha256:2d38b2f9a14cf2a6f3e0381e72e2c802e6a811e5a2f61abbe413cd6d5dccba15
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d6e2b21e367a8cda0c7ca125ddea1e2cefd2c20c1dbcc9dc15cb6ec6f86597ba
          exitCode: 0
          finishedAt: "2024-02-14T22:30:12Z"
          reason: Completed
          startedAt: "2024-02-14T22:30:11Z"
    phase: Running
    podIP: 192.168.64.18
    podIPs:
    - ip: 192.168.64.18
    qosClass: BestEffort
    startTime: "2024-02-14T02:13:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      hash.operator.tigera.io/cni-config: 7c3d4f43aed6c9f83376215a5e9a368bef0902a0
      hash.operator.tigera.io/system: fdde45054a8ae4f629960ce37570929502e59449
      tigera-operator.hash.operator.tigera.io/tigera-ca-private: ab2cf664664ba80e9d276b6e112bb6990c244692
    creationTimestamp: "2024-02-14T03:20:13Z"
    generateName: calico-node-
    labels:
      app.kubernetes.io/name: calico-node
      controller-revision-hash: 6464d9c99
      k8s-app: calico-node
      pod-template-generation: "1"
    name: calico-node-xwf42
    namespace: calico-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: calico-node
      uid: 7c6d80da-dce1-444a-b139-0275e67341f1
    resourceVersion: "25178"
    uid: b26ade6d-1aa1-4234-9fb5-8e58ec0b843f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-2
    containers:
    - env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: WAIT_FOR_DATASTORE
        value: "true"
      - name: CLUSTER_TYPE
        value: k8s,operator,bgp
      - name: CALICO_DISABLE_FILE_LOGGING
        value: "false"
      - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
        value: ACCEPT
      - name: FELIX_HEALTHENABLED
        value: "true"
      - name: FELIX_HEALTHPORT
        value: "9099"
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: FELIX_TYPHAK8SNAMESPACE
        value: calico-system
      - name: FELIX_TYPHAK8SSERVICENAME
        value: calico-typha
      - name: FELIX_TYPHACAFILE
        value: /etc/pki/tls/certs/tigera-ca-bundle.crt
      - name: FELIX_TYPHACERTFILE
        value: /node-certs/tls.crt
      - name: FELIX_TYPHAKEYFILE
        value: /node-certs/tls.key
      - name: FIPS_MODE_ENABLED
        value: "false"
      - name: FELIX_TYPHACN
        value: typha-server
      - name: CALICO_MANAGE_CNI
        value: "true"
      - name: CALICO_IPV4POOL_CIDR
        value: 10.10.0.0/16
      - name: CALICO_IPV4POOL_VXLAN
        value: CrossSubnet
      - name: CALICO_IPV4POOL_BLOCK_SIZE
        value: "26"
      - name: CALICO_IPV4POOL_NODE_SELECTOR
        value: all()
      - name: CALICO_IPV4POOL_DISABLE_BGP_EXPORT
        value: "false"
      - name: CALICO_NETWORKING_BACKEND
        value: bird
      - name: IP
        value: autodetect
      - name: IP_AUTODETECTION_METHOD
        value: first-found
      - name: IP6
        value: none
      - name: FELIX_IPV6SUPPORT
        value: "false"
      - name: KUBERNETES_SERVICE_HOST
        value: 10.96.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "443"
      image: docker.io/calico/node:v3.27.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/calico-node
            - -shutdown
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /liveness
          port: 9099
          scheme: HTTP
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-node
      readinessProbe:
        exec:
          command:
          - /bin/calico-node
          - -bird-ready
          - -felix-ready
        failureThreshold: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/pki/tls/certs
        name: tigera-ca-bundle
        readOnly: true
      - mountPath: /etc/pki/tls/cert.pem
        name: tigera-ca-bundle
        readOnly: true
        subPath: ca-bundle.crt
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/nodeagent
        name: policysync
      - mountPath: /node-certs
        name: node-certs
        readOnly: true
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qgldf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - image: docker.io/calico/pod2daemon-flexvol:v3.27.0
      imagePullPolicy: IfNotPresent
      name: flexvol-driver
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/driver
        name: flexvol-driver-host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qgldf
        readOnly: true
    - command:
      - /opt/cni/bin/install
      env:
      - name: CNI_CONF_NAME
        value: 10-calico.conflist
      - name: SLEEP
        value: "false"
      - name: CNI_NET_DIR
        value: /etc/cni/net.d
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: config
            name: cni-config
      - name: KUBERNETES_SERVICE_HOST
        value: 10.96.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "443"
      image: docker.io/calico/cni:v3.27.0
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qgldf
        readOnly: true
    nodeName: worker-2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-node
    serviceAccountName: calico-node
    terminationGracePeriodSeconds: 5
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /var/run/nodeagent
        type: DirectoryOrCreate
      name: policysync
    - configMap:
        defaultMode: 420
        name: tigera-ca-bundle
      name: tigera-ca-bundle
    - name: node-certs
      secret:
        defaultMode: 420
        secretName: node-certs
    - hostPath:
        path: /var/run/calico
        type: ""
      name: var-run-calico
    - hostPath:
        path: /var/lib/calico
        type: ""
      name: var-lib-calico
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/calico/cni
        type: ""
      name: cni-log-dir
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec/nodeagent~uds
        type: DirectoryOrCreate
      name: flexvol-driver-host
    - name: kube-api-access-qgldf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:20:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:32:04Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:21:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:20:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://52f62f19d01ae7297b62da1387b996d158c526e329ee375fc94a7fc1fc3c567a
      image: docker.io/calico/node:v3.27.0
      imageID: docker.io/calico/node@sha256:58cd8f6547b4f438f36a1cd7030985f153eca22d78d86dc9cd6f0fe4f32d01bf
      lastState: {}
      name: calico-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:20:52Z"
    hostIP: 192.168.64.21
    initContainerStatuses:
    - containerID: containerd://b9c34b67bc81a2853e4bd18a622f52562ff511beaac27c4fa45e2c4856baecc4
      image: docker.io/calico/pod2daemon-flexvol:v3.27.0
      imageID: docker.io/calico/pod2daemon-flexvol@sha256:d2cab59bf301e59034a80c4374360cab1aab5fa86b8dbe1f4d74fd437acec121
      lastState: {}
      name: flexvol-driver
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://b9c34b67bc81a2853e4bd18a622f52562ff511beaac27c4fa45e2c4856baecc4
          exitCode: 0
          finishedAt: "2024-02-14T03:20:20Z"
          reason: Completed
          startedAt: "2024-02-14T03:20:20Z"
    - containerID: containerd://3a3a8af3043d4004af46f5f16b1a1e5e3e14d2f269652e4c6f36224ae4603314
      image: docker.io/calico/cni:v3.27.0
      imageID: docker.io/calico/cni@sha256:2d38b2f9a14cf2a6f3e0381e72e2c802e6a811e5a2f61abbe413cd6d5dccba15
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3a3a8af3043d4004af46f5f16b1a1e5e3e14d2f269652e4c6f36224ae4603314
          exitCode: 0
          finishedAt: "2024-02-14T03:20:39Z"
          reason: Completed
          startedAt: "2024-02-14T03:20:38Z"
    phase: Running
    podIP: 192.168.64.21
    podIPs:
    - ip: 192.168.64.21
    qosClass: BestEffort
    startTime: "2024-02-14T03:20:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      hash.operator.tigera.io/cni-config: 7c3d4f43aed6c9f83376215a5e9a368bef0902a0
      hash.operator.tigera.io/system: fdde45054a8ae4f629960ce37570929502e59449
      tigera-operator.hash.operator.tigera.io/tigera-ca-private: ab2cf664664ba80e9d276b6e112bb6990c244692
    creationTimestamp: "2024-02-14T02:13:28Z"
    generateName: calico-node-
    labels:
      app.kubernetes.io/name: calico-node
      controller-revision-hash: 6464d9c99
      k8s-app: calico-node
      pod-template-generation: "1"
    name: calico-node-zgvz9
    namespace: calico-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: calico-node
      uid: 7c6d80da-dce1-444a-b139-0275e67341f1
    resourceVersion: "24970"
    uid: 7133d6eb-a346-4843-9541-9f4f2f6dfb44
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-1
    containers:
    - env:
      - name: DATASTORE_TYPE
        value: kubernetes
      - name: WAIT_FOR_DATASTORE
        value: "true"
      - name: CLUSTER_TYPE
        value: k8s,operator,bgp
      - name: CALICO_DISABLE_FILE_LOGGING
        value: "false"
      - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
        value: ACCEPT
      - name: FELIX_HEALTHENABLED
        value: "true"
      - name: FELIX_HEALTHPORT
        value: "9099"
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: FELIX_TYPHAK8SNAMESPACE
        value: calico-system
      - name: FELIX_TYPHAK8SSERVICENAME
        value: calico-typha
      - name: FELIX_TYPHACAFILE
        value: /etc/pki/tls/certs/tigera-ca-bundle.crt
      - name: FELIX_TYPHACERTFILE
        value: /node-certs/tls.crt
      - name: FELIX_TYPHAKEYFILE
        value: /node-certs/tls.key
      - name: FIPS_MODE_ENABLED
        value: "false"
      - name: FELIX_TYPHACN
        value: typha-server
      - name: CALICO_MANAGE_CNI
        value: "true"
      - name: CALICO_IPV4POOL_CIDR
        value: 10.10.0.0/16
      - name: CALICO_IPV4POOL_VXLAN
        value: CrossSubnet
      - name: CALICO_IPV4POOL_BLOCK_SIZE
        value: "26"
      - name: CALICO_IPV4POOL_NODE_SELECTOR
        value: all()
      - name: CALICO_IPV4POOL_DISABLE_BGP_EXPORT
        value: "false"
      - name: CALICO_NETWORKING_BACKEND
        value: bird
      - name: IP
        value: autodetect
      - name: IP_AUTODETECTION_METHOD
        value: first-found
      - name: IP6
        value: none
      - name: FELIX_IPV6SUPPORT
        value: "false"
      - name: KUBERNETES_SERVICE_HOST
        value: 10.96.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "443"
      image: docker.io/calico/node:v3.27.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/calico-node
            - -shutdown
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /liveness
          port: 9099
          scheme: HTTP
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-node
      readinessProbe:
        exec:
          command:
          - /bin/calico-node
          - -bird-ready
          - -felix-ready
        failureThreshold: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/pki/tls/certs
        name: tigera-ca-bundle
        readOnly: true
      - mountPath: /etc/pki/tls/cert.pem
        name: tigera-ca-bundle
        readOnly: true
        subPath: ca-bundle.crt
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/nodeagent
        name: policysync
      - mountPath: /node-certs
        name: node-certs
        readOnly: true
      - mountPath: /var/run/calico
        name: var-run-calico
      - mountPath: /var/lib/calico
        name: var-lib-calico
      - mountPath: /var/log/calico/cni
        name: cni-log-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mmmmx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - image: docker.io/calico/pod2daemon-flexvol:v3.27.0
      imagePullPolicy: IfNotPresent
      name: flexvol-driver
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/driver
        name: flexvol-driver-host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mmmmx
        readOnly: true
    - command:
      - /opt/cni/bin/install
      env:
      - name: CNI_CONF_NAME
        value: 10-calico.conflist
      - name: SLEEP
        value: "false"
      - name: CNI_NET_DIR
        value: /etc/cni/net.d
      - name: CNI_NETWORK_CONFIG
        valueFrom:
          configMapKeyRef:
            key: config
            name: cni-config
      - name: KUBERNETES_SERVICE_HOST
        value: 10.96.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "443"
      image: docker.io/calico/cni:v3.27.0
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cni-bin-dir
      - mountPath: /host/etc/cni/net.d
        name: cni-net-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mmmmx
        readOnly: true
    nodeName: worker-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-node
    serviceAccountName: calico-node
    terminationGracePeriodSeconds: 5
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /var/run/nodeagent
        type: DirectoryOrCreate
      name: policysync
    - configMap:
        defaultMode: 420
        name: tigera-ca-bundle
      name: tigera-ca-bundle
    - name: node-certs
      secret:
        defaultMode: 420
        secretName: node-certs
    - hostPath:
        path: /var/run/calico
        type: ""
      name: var-run-calico
    - hostPath:
        path: /var/lib/calico
        type: ""
      name: var-lib-calico
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-bin-dir
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-net-dir
    - hostPath:
        path: /var/log/calico/cni
        type: ""
      name: cni-log-dir
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec/nodeagent~uds
        type: DirectoryOrCreate
      name: flexvol-driver-host
    - name: kube-api-access-mmmmx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://04031502f1eb494934f814d4668af5702ad86e687bfe222fc06abc1cf8005514
      image: docker.io/calico/node:v3.27.0
      imageID: docker.io/calico/node@sha256:58cd8f6547b4f438f36a1cd7030985f153eca22d78d86dc9cd6f0fe4f32d01bf
      lastState:
        terminated:
          containerID: containerd://6a83366ddd26e171872d28e6cf599705798fa475c7c0056090b628adb4509742
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T02:14:09Z"
      name: calico-node
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:17Z"
    hostIP: 192.168.64.20
    initContainerStatuses:
    - containerID: containerd://f6962670f270c772629a0c43f9b04eb5ed135fce0080dd84d5747b4484366238
      image: docker.io/calico/pod2daemon-flexvol:v3.27.0
      imageID: docker.io/calico/pod2daemon-flexvol@sha256:d2cab59bf301e59034a80c4374360cab1aab5fa86b8dbe1f4d74fd437acec121
      lastState: {}
      name: flexvol-driver
      ready: true
      restartCount: 1
      started: false
      state:
        terminated:
          containerID: containerd://f6962670f270c772629a0c43f9b04eb5ed135fce0080dd84d5747b4484366238
          exitCode: 0
          finishedAt: "2024-02-14T22:30:14Z"
          reason: Completed
          startedAt: "2024-02-14T22:30:14Z"
    - containerID: containerd://914adab854ca1170a89ae0dc8165b4712513f8f25a10b5de09ca2a61fe99ddea
      image: docker.io/calico/cni:v3.27.0
      imageID: docker.io/calico/cni@sha256:2d38b2f9a14cf2a6f3e0381e72e2c802e6a811e5a2f61abbe413cd6d5dccba15
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://914adab854ca1170a89ae0dc8165b4712513f8f25a10b5de09ca2a61fe99ddea
          exitCode: 0
          finishedAt: "2024-02-14T22:30:16Z"
          reason: Completed
          startedAt: "2024-02-14T22:30:15Z"
    phase: Running
    podIP: 192.168.64.20
    podIPs:
    - ip: 192.168.64.20
    qosClass: BestEffort
    startTime: "2024-02-14T02:13:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      hash.operator.tigera.io/system: fdde45054a8ae4f629960ce37570929502e59449
      tigera-operator.hash.operator.tigera.io/tigera-ca-private: ab2cf664664ba80e9d276b6e112bb6990c244692
      tigera-operator.hash.operator.tigera.io/typha-certs: a793e30169cd9554662e6bfa23593285876a191a
    creationTimestamp: "2024-02-14T03:53:45Z"
    generateName: calico-typha-6575569d7-
    labels:
      app.kubernetes.io/name: calico-typha
      k8s-app: calico-typha
      pod-template-hash: 6575569d7
    name: calico-typha-6575569d7-l8w72
    namespace: calico-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: calico-typha-6575569d7
      uid: e9f02581-0bd3-47be-916c-cee023058fcc
    resourceVersion: "25181"
    uid: f70671d1-f921-4046-8e22-444958d21f62
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - calico-typha
            topologyKey: topology.kubernetes.io/zone
          weight: 1
    containers:
    - env:
      - name: TYPHA_LOGSEVERITYSCREEN
        value: info
      - name: TYPHA_LOGFILEPATH
        value: none
      - name: TYPHA_LOGSEVERITYSYS
        value: none
      - name: TYPHA_CONNECTIONREBALANCINGMODE
        value: kubernetes
      - name: TYPHA_DATASTORETYPE
        value: kubernetes
      - name: TYPHA_HEALTHENABLED
        value: "true"
      - name: TYPHA_HEALTHPORT
        value: "9098"
      - name: TYPHA_K8SNAMESPACE
        value: calico-system
      - name: TYPHA_CAFILE
        value: /etc/pki/tls/certs/tigera-ca-bundle.crt
      - name: TYPHA_SERVERCERTFILE
        value: /typha-certs/tls.crt
      - name: TYPHA_SERVERKEYFILE
        value: /typha-certs/tls.key
      - name: TYPHA_FIPSMODEENABLED
        value: "false"
      - name: TYPHA_SHUTDOWNTIMEOUTSECS
        value: "300"
      - name: TYPHA_CLIENTCN
        value: typha-client
      - name: KUBERNETES_SERVICE_HOST
        value: 10.96.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "443"
      image: docker.io/calico/typha:v3.27.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /liveness
          port: 9098
          scheme: HTTP
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-typha
      ports:
      - containerPort: 5473
        hostPort: 5473
        name: calico-typha
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /readiness
          port: 9098
          scheme: HTTP
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/pki/tls/certs
        name: tigera-ca-bundle
        readOnly: true
      - mountPath: /etc/pki/tls/cert.pem
        name: tigera-ca-bundle
        readOnly: true
        subPath: ca-bundle.crt
      - mountPath: /typha-certs
        name: typha-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6gn2k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: worker-2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-typha
    serviceAccountName: calico-typha
    terminationGracePeriodSeconds: 300
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: tigera-ca-bundle
      name: tigera-ca-bundle
    - name: typha-certs
      secret:
        defaultMode: 420
        secretName: typha-certs
    - name: kube-api-access-6gn2k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:53:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:32:05Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:53:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:53:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://998a99ecadeac473040a66483ab3083387b2c7cbf613cf1e3385204bed7578aa
      image: docker.io/calico/typha:v3.27.0
      imageID: docker.io/calico/typha@sha256:8411799beaaa52145036f6119a484382c0411e045af4e5f81e0abec52d25d563
      lastState: {}
      name: calico-typha
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:53:45Z"
    hostIP: 192.168.64.21
    phase: Running
    podIP: 192.168.64.21
    podIPs:
    - ip: 192.168.64.21
    qosClass: BestEffort
    startTime: "2024-02-14T03:53:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      hash.operator.tigera.io/system: fdde45054a8ae4f629960ce37570929502e59449
      tigera-operator.hash.operator.tigera.io/tigera-ca-private: ab2cf664664ba80e9d276b6e112bb6990c244692
      tigera-operator.hash.operator.tigera.io/typha-certs: a793e30169cd9554662e6bfa23593285876a191a
    creationTimestamp: "2024-02-14T02:13:28Z"
    generateName: calico-typha-6575569d7-
    labels:
      app.kubernetes.io/name: calico-typha
      k8s-app: calico-typha
      pod-template-hash: 6575569d7
    name: calico-typha-6575569d7-mqjjf
    namespace: calico-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: calico-typha-6575569d7
      uid: e9f02581-0bd3-47be-916c-cee023058fcc
    resourceVersion: "24882"
    uid: 0246d645-a845-4248-8dd4-932d8b637aeb
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - calico-typha
            topologyKey: topology.kubernetes.io/zone
          weight: 1
    containers:
    - env:
      - name: TYPHA_LOGSEVERITYSCREEN
        value: info
      - name: TYPHA_LOGFILEPATH
        value: none
      - name: TYPHA_LOGSEVERITYSYS
        value: none
      - name: TYPHA_CONNECTIONREBALANCINGMODE
        value: kubernetes
      - name: TYPHA_DATASTORETYPE
        value: kubernetes
      - name: TYPHA_HEALTHENABLED
        value: "true"
      - name: TYPHA_HEALTHPORT
        value: "9098"
      - name: TYPHA_K8SNAMESPACE
        value: calico-system
      - name: TYPHA_CAFILE
        value: /etc/pki/tls/certs/tigera-ca-bundle.crt
      - name: TYPHA_SERVERCERTFILE
        value: /typha-certs/tls.crt
      - name: TYPHA_SERVERKEYFILE
        value: /typha-certs/tls.key
      - name: TYPHA_FIPSMODEENABLED
        value: "false"
      - name: TYPHA_SHUTDOWNTIMEOUTSECS
        value: "300"
      - name: TYPHA_CLIENTCN
        value: typha-client
      - name: KUBERNETES_SERVICE_HOST
        value: 10.96.0.1
      - name: KUBERNETES_SERVICE_PORT
        value: "443"
      image: docker.io/calico/typha:v3.27.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /liveness
          port: 9098
          scheme: HTTP
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 10
      name: calico-typha
      ports:
      - containerPort: 5473
        hostPort: 5473
        name: calico-typha
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: localhost
          path: /readiness
          port: 9098
          scheme: HTTP
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/pki/tls/certs
        name: tigera-ca-bundle
        readOnly: true
      - mountPath: /etc/pki/tls/cert.pem
        name: tigera-ca-bundle
        readOnly: true
        subPath: ca-bundle.crt
      - mountPath: /typha-certs
        name: typha-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6tfdp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: worker-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: calico-typha
    serviceAccountName: calico-typha
    terminationGracePeriodSeconds: 300
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: tigera-ca-bundle
      name: tigera-ca-bundle
    - name: typha-certs
      secret:
        defaultMode: 420
        secretName: typha-certs
    - name: kube-api-access-6tfdp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e740d5724e6234cfe657771d3e8cbb9261213d51523889d7f0014c5e6e552ea0
      image: docker.io/calico/typha:v3.27.0
      imageID: docker.io/calico/typha@sha256:8411799beaaa52145036f6119a484382c0411e045af4e5f81e0abec52d25d563
      lastState:
        terminated:
          containerID: containerd://9d2eb1c22368d96fd87c6986bd4b9e7e061167016c6a1431edbbb615b51b714f
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T02:13:35Z"
      name: calico-typha
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:14Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 192.168.64.20
    podIPs:
    - ip: 192.168.64.20
    qosClass: BestEffort
    startTime: "2024-02-14T02:13:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 93926a43611c76121a35f58bfa667425988c574ad3529af80341465aacf3219b
      cni.projectcalico.org/podIP: 10.10.226.92/32
      cni.projectcalico.org/podIPs: 10.10.226.92/32
    creationTimestamp: "2024-02-14T02:13:28Z"
    generateName: csi-node-driver-
    labels:
      app.kubernetes.io/name: csi-node-driver
      controller-revision-hash: 774f46d66c
      k8s-app: csi-node-driver
      name: csi-node-driver
      pod-template-generation: "1"
    name: csi-node-driver-2q6t5
    namespace: calico-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-node-driver
      uid: 4583c3bc-5962-4502-a28a-e53ad1788516
    resourceVersion: "24955"
    uid: 6f740ce8-7119-4b0a-acd9-213451b8f077
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-1
    containers:
    - args:
      - --nodeid=$(KUBE_NODE_NAME)
      - --loglevel=$(LOG_LEVEL)
      env:
      - name: LOG_LEVEL
        value: warn
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/calico/csi:v3.27.0
      imagePullPolicy: IfNotPresent
      name: calico-csi
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run
        name: varrun
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9lr9w
        readOnly: true
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.tigera.io/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/calico/node-driver-registrar:v3.27.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9lr9w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run
        type: ""
      name: varrun
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.tigera.io
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry
        type: Directory
      name: registration-dir
    - name: kube-api-access-9lr9w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3ddd848cfbe328df65bc3cae00d30cc1f7480e7acc8cb8f5b34191c43504c2f9
      image: docker.io/calico/csi:v3.27.0
      imageID: docker.io/calico/csi@sha256:15a0c4813cea3feefc9dceaeacf45e9a15a406b123d0c7f701a5378f2c6770f0
      lastState:
        terminated:
          containerID: containerd://092c0ca6f68718f7b30a1b5c86647c544be2a68650885e2d7cfb309489915e8d
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T02:14:23Z"
      name: calico-csi
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:56Z"
    - containerID: containerd://82679aa6fae6ca04a6be863aa5269af3d0e6eef2cd0530644db2d04252e90cd5
      image: docker.io/calico/node-driver-registrar:v3.27.0
      imageID: docker.io/calico/node-driver-registrar@sha256:c6d36f4809bea867a2558d3751d7a218091d17f5ac5bfda7348a647584bf6178
      lastState:
        terminated:
          containerID: containerd://ade105408fc6ea54a0c17dc1929a05f0902daac87e75c61c5641e14e07de4ee2
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T02:14:27Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:57Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.92
    podIPs:
    - ip: 10.10.226.92
    qosClass: BestEffort
    startTime: "2024-02-14T02:13:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 5dfebfd330e912331b0bb1dcd44868bf71ca317bc6a04ef52eac25960b891aaa
      cni.projectcalico.org/podIP: 10.10.133.193/32
      cni.projectcalico.org/podIPs: 10.10.133.193/32
    creationTimestamp: "2024-02-14T03:20:13Z"
    generateName: csi-node-driver-
    labels:
      app.kubernetes.io/name: csi-node-driver
      controller-revision-hash: 774f46d66c
      k8s-app: csi-node-driver
      name: csi-node-driver
      pod-template-generation: "1"
    name: csi-node-driver-gws6f
    namespace: calico-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-node-driver
      uid: 4583c3bc-5962-4502-a28a-e53ad1788516
    resourceVersion: "25201"
    uid: 8d19f189-b871-4294-838f-c335d60f7e3d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-2
    containers:
    - args:
      - --nodeid=$(KUBE_NODE_NAME)
      - --loglevel=$(LOG_LEVEL)
      env:
      - name: LOG_LEVEL
        value: warn
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/calico/csi:v3.27.0
      imagePullPolicy: IfNotPresent
      name: calico-csi
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run
        name: varrun
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rhkrf
        readOnly: true
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.tigera.io/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/calico/node-driver-registrar:v3.27.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rhkrf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run
        type: ""
      name: varrun
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.tigera.io
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry
        type: Directory
      name: registration-dir
    - name: kube-api-access-rhkrf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:20:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:32:05Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:21:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:20:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8861cd88bf0cb2380f8b2b30ca143139dbb21a75d95730181ad84afbfd0126c3
      image: docker.io/calico/csi:v3.27.0
      imageID: docker.io/calico/csi@sha256:15a0c4813cea3feefc9dceaeacf45e9a15a406b123d0c7f701a5378f2c6770f0
      lastState: {}
      name: calico-csi
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:21:08Z"
    - containerID: containerd://195fd65ccb1ad56227f1d75ebddc144168dda646f71506a165c14f6c1a34af78
      image: docker.io/calico/node-driver-registrar:v3.27.0
      imageID: docker.io/calico/node-driver-registrar@sha256:c6d36f4809bea867a2558d3751d7a218091d17f5ac5bfda7348a647584bf6178
      lastState: {}
      name: csi-node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:21:11Z"
    hostIP: 192.168.64.21
    phase: Running
    podIP: 10.10.133.193
    podIPs:
    - ip: 10.10.133.193
    qosClass: BestEffort
    startTime: "2024-02-14T03:20:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 251a9e269938c7061172e1ae0129183859cd7e2c4c244bd874cb68bc80535101
      cni.projectcalico.org/podIP: 10.10.219.82/32
      cni.projectcalico.org/podIPs: 10.10.219.82/32
    creationTimestamp: "2024-02-14T02:13:28Z"
    generateName: csi-node-driver-
    labels:
      app.kubernetes.io/name: csi-node-driver
      controller-revision-hash: 774f46d66c
      k8s-app: csi-node-driver
      name: csi-node-driver
      pod-template-generation: "1"
    name: csi-node-driver-qkwr9
    namespace: calico-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-node-driver
      uid: 4583c3bc-5962-4502-a28a-e53ad1788516
    resourceVersion: "24902"
    uid: 22c88a2a-50c0-48b8-8901-91caa4fa894e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master
    containers:
    - args:
      - --nodeid=$(KUBE_NODE_NAME)
      - --loglevel=$(LOG_LEVEL)
      env:
      - name: LOG_LEVEL
        value: warn
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/calico/csi:v3.27.0
      imagePullPolicy: IfNotPresent
      name: calico-csi
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run
        name: varrun
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vmjlb
        readOnly: true
    - args:
      - --v=5
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/csi.tigera.io/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: docker.io/calico/node-driver-registrar:v3.27.0
      imagePullPolicy: IfNotPresent
      name: csi-node-driver-registrar
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          drop:
          - ALL
        privileged: true
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vmjlb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: master
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run
        type: ""
      name: varrun
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi.tigera.io
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry
        type: Directory
      name: registration-dir
    - name: kube-api-access-vmjlb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a446e9320fa88ebebda8b2b36586b2b646e3bc5209088d48da36b3cb2169b047
      image: docker.io/calico/csi:v3.27.0
      imageID: docker.io/calico/csi@sha256:15a0c4813cea3feefc9dceaeacf45e9a15a406b123d0c7f701a5378f2c6770f0
      lastState:
        terminated:
          containerID: containerd://81a50b935bf4f5062fc0376050fcd03b151fc795f4b442e9c2a32abc1b857aed
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:41:05Z"
      name: calico-csi
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:52Z"
    - containerID: containerd://dc2f02aa7270dadd22d35450a94c5ee9ab7e91f116311a096eeb71fdb1bb8046
      image: docker.io/calico/node-driver-registrar:v3.27.0
      imageID: docker.io/calico/node-driver-registrar@sha256:c6d36f4809bea867a2558d3751d7a218091d17f5ac5bfda7348a647584bf6178
      lastState:
        terminated:
          containerID: containerd://78a409aaf3e73a0f69b7d2531857bfcca9cec9ff1a8bd27a621602b94e204619
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:41:05Z"
      name: csi-node-driver-registrar
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:52Z"
    hostIP: 192.168.64.18
    phase: Running
    podIP: 10.10.219.82
    podIPs:
    - ip: 10.10.219.82
    qosClass: BestEffort
    startTime: "2024-02-14T02:13:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 73a22eba7398ff15dd211a682f9aa6bbc56e894f3372deaa2c5f676637bb68c3
      cni.projectcalico.org/podIP: 10.10.226.104/32
      cni.projectcalico.org/podIPs: 10.10.226.104/32
    creationTimestamp: "2024-02-14T22:37:10Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-59rf5
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25951"
    uid: 3ee6fbac-7c44-456e-95fc-01f1f39edd5b
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nnf5z
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-nnf5z
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9b2d0a70425256a018fef903b0bc2e8b71fae278fdacaa00b4aef5d335a37b80
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:37:11Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.104
    podIPs:
    - ip: 10.10.226.104
    qosClass: BestEffort
    startTime: "2024-02-14T22:37:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 57cd3b7d9d3446e90373834eda73d398b6d362c235401dd9191906549a0c7598
      cni.projectcalico.org/podIP: 10.10.226.101/32
      cni.projectcalico.org/podIPs: 10.10.226.101/32
    creationTimestamp: "2024-02-14T22:37:10Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-6pb5l
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25936"
    uid: 764c8e11-d0d8-4f9d-804a-587a4f1f94fe
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t487t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-t487t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1113b63487d1d9929140e3d8c5c2f39ead7fb0644e40d2a9e35b10539cb4d4bd
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:37:11Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.101
    podIPs:
    - ip: 10.10.226.101
    qosClass: BestEffort
    startTime: "2024-02-14T22:37:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: eaedb7c98fd0e52a9e8a5de22908d04a6455c949047997b46a9ab7f5a8150921
      cni.projectcalico.org/podIP: 10.10.226.98/32
      cni.projectcalico.org/podIPs: 10.10.226.98/32
    creationTimestamp: "2024-02-14T03:45:39Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-6shc7
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25029"
    uid: fa519147-c328-4f23-95f4-a31249f51044
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p6qnt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-p6qnt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:45:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:45:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ef3f3e791ee034789902ff5fe61993d5e4b8c1cb6018168dfec1ec30a27abd46
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState:
        terminated:
          containerID: containerd://f1cf9eee450d055690518e0d7ccde272d44d8c0570f91e54e209e426b53464ac
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:45:57Z"
      name: nginx-deploy-container
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:59Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.98
    podIPs:
    - ip: 10.10.226.98
    qosClass: BestEffort
    startTime: "2024-02-14T03:45:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 7a93cec1d392e87ad4efdb373fdb89a15e50b5bda90ce353b8495630bc3f2dde
      cni.projectcalico.org/podIP: 10.10.226.97/32
      cni.projectcalico.org/podIPs: 10.10.226.97/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-6vl5b
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25030"
    uid: 3e592317-8dc6-4000-bdc8-4f4130870211
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hnx2c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hnx2c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d001f1c12d499702bbd89cd5f1dbc21d1d30917382f603ab43f38042f91e9c07
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState:
        terminated:
          containerID: containerd://145276f07c53601af32bec88e4d17fea5047e71362da49105eb3a1bbe16c5559
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:55:38Z"
      name: nginx-deploy-container
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:59Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.97
    podIPs:
    - ip: 10.10.226.97
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: f1b655aca59e77cf936e318cb7a66703d0a991c538bd0044a27a92db19bdfb53
      cni.projectcalico.org/podIP: 10.10.226.102/32
      cni.projectcalico.org/podIPs: 10.10.226.102/32
    creationTimestamp: "2024-02-14T22:37:10Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-8qr4g
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25930"
    uid: f9dc9366-f294-48af-b22e-602f5ee16f2c
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c9292
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-c9292
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5384aec105affa65fd05427bc88f1a238a32256524e071a9564505b8325cc774
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:37:11Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.102
    podIPs:
    - ip: 10.10.226.102
    qosClass: BestEffort
    startTime: "2024-02-14T22:37:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 162b72c1a1c46f84bb006d7e6ba48d292fb9e2674fc6ba23f22a2fc705024754
      cni.projectcalico.org/podIP: 10.10.133.208/32
      cni.projectcalico.org/podIPs: 10.10.133.208/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-02-14T22:37:40Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-92jd5
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25822"
    uid: a02c21c6-799c-42fa-8410-10bb43251f3f
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8n6vb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8n6vb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:32:05Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://65d618998ce3ae9b9b292967a2a5cb99aad293a7c218f65bd9b04d072c3c4d18
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:55:38Z"
    hostIP: 192.168.64.21
    phase: Running
    podIP: 10.10.133.208
    podIPs:
    - ip: 10.10.133.208
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 01a648d73fd3756a183bb51d0cf16b857e3f4e411ee3fe911f8df6dadd6fd215
      cni.projectcalico.org/podIP: 10.10.226.96/32
      cni.projectcalico.org/podIPs: 10.10.226.96/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-b4kxc
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25031"
    uid: ba32e20c-913f-4696-ad0e-22f64b5ca321
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2x87j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-2x87j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://98eb01db63755277feb1f15f541021591d230b7fb98097849dedb0880b36e72f
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState:
        terminated:
          containerID: containerd://7f412a76a7deb2251def543e1162a592fd566b3d895e0c140c7ea10e0134d8bc
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:55:38Z"
      name: nginx-deploy-container
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:59Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.96
    podIPs:
    - ip: 10.10.226.96
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 16fd2ed0de061daba7acad9ab07fb9b6f24d4271194054c0084ff4dfcc99a34b
      cni.projectcalico.org/podIP: 10.10.133.209/32
      cni.projectcalico.org/podIPs: 10.10.133.209/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-02-14T22:37:40Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-bldlg
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25825"
    uid: 8847e1e2-4c5e-463c-a97b-70a0c9e674b5
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ndjdd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ndjdd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:32:04Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://215db4677685971f39d2fc3409fc67239fe3b98d25d3349475a85ee1f09c48bf
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:55:38Z"
    hostIP: 192.168.64.21
    phase: Running
    podIP: 10.10.133.209
    podIPs:
    - ip: 10.10.133.209
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 42dee5c04f21e9d8d1c11db7c1f4d86f78352cb40a698c391ebed3d1f719d736
      cni.projectcalico.org/podIP: 10.10.133.205/32
      cni.projectcalico.org/podIPs: 10.10.133.205/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-02-14T22:37:40Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-c4pql
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25821"
    uid: ea09f1cb-35cd-45b0-8c51-6c9b4f96b389
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5m8qj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-5m8qj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:32:05Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://0170d487b2e1aa2c9a32f71d1cfd191fd25d3e86b2481540e315df30bec8f97a
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:55:38Z"
    hostIP: 192.168.64.21
    phase: Running
    podIP: 10.10.133.205
    podIPs:
    - ip: 10.10.133.205
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: e1bef17ffd6b817c1756fdbb6f6b0d6acf06bcec638f07c63b31b676b70e2605
      cni.projectcalico.org/podIP: 10.10.226.106/32
      cni.projectcalico.org/podIPs: 10.10.226.106/32
    creationTimestamp: "2024-02-14T22:37:10Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-dlvgk
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25939"
    uid: 33dea5d7-53c9-4914-9377-2ad0b3f7f421
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vr58s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vr58s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://76a108ece55d66c8bce9b927334eaf74ef335e7b14817ba1e8fbfa06d459f5b4
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:37:11Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.106
    podIPs:
    - ip: 10.10.226.106
    qosClass: BestEffort
    startTime: "2024-02-14T22:37:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9d97731f14c547135408a9c31ed5df0c681c010f0ad712af9d64ca781d24a25f
      cni.projectcalico.org/podIP: 10.10.226.100/32
      cni.projectcalico.org/podIPs: 10.10.226.100/32
    creationTimestamp: "2024-02-14T22:37:10Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-h8cf4
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25933"
    uid: 31cd6b39-7061-4635-9180-e6d97a5da37d
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bx89g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-bx89g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f89ac526b634bb7bd355ff6f652b034da6ccee762955ae743edc191d609d3af9
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:37:10Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.100
    podIPs:
    - ip: 10.10.226.100
    qosClass: BestEffort
    startTime: "2024-02-14T22:37:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: ee0531e04d5bbb8acdd0e64ffa3900e7d5a2829ab5bb17c92278285c630dd0a2
      cni.projectcalico.org/podIP: 10.10.226.99/32
      cni.projectcalico.org/podIPs: 10.10.226.99/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-hr24r
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25034"
    uid: 1b7715ba-60b0-443d-8c7f-e58dc84bf304
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tkgxd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tkgxd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://31a7116b84090ff2ae089d3e38253d55671f0b8689527e80deb70092da2bc4a0
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState:
        terminated:
          containerID: containerd://5e45ec52de13b2263458520f8a15b47aeaa9e81da471443871d127841c1c02db
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:55:38Z"
      name: nginx-deploy-container
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:31:00Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.99
    podIPs:
    - ip: 10.10.226.99
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 493d4714a8b67656998efd4bf3764d4adddf5143a230e4c57bc282e41bbb0e69
      cni.projectcalico.org/podIP: 10.10.133.203/32
      cni.projectcalico.org/podIPs: 10.10.133.203/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-02-14T22:37:40Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-jfdc6
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25826"
    uid: 132ad00c-501c-4947-910a-3dd7ea5a2000
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6pgcv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6pgcv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:32:05Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://648d63ad4b01cd6b614fff73233d1ddaa2b6e0c38683dc6bc90ce9a7b1093abc
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:55:38Z"
    hostIP: 192.168.64.21
    phase: Running
    podIP: 10.10.133.203
    podIPs:
    - ip: 10.10.133.203
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 5c630383ec77bf8fa5a8ec91398ee272d3b6ee63f10b50d36c02f64ff76b5524
      cni.projectcalico.org/podIP: 10.10.133.207/32
      cni.projectcalico.org/podIPs: 10.10.133.207/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-02-14T22:37:40Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-jtwbr
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25819"
    uid: 44419315-fdac-4df0-af22-209f07ecc669
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5vjmw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-5vjmw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:32:05Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://578ed10ac3bf2f791eef5d5eff43a974441f9e89340270294e7e81d6832459c5
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:55:38Z"
    hostIP: 192.168.64.21
    phase: Running
    podIP: 10.10.133.207
    podIPs:
    - ip: 10.10.133.207
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 8b1fd87eebd2786eb8eded05e68a5cd3f6f3ba61fe78a833c61e069a0a82e2ec
      cni.projectcalico.org/podIP: 10.10.133.202/32
      cni.projectcalico.org/podIPs: 10.10.133.202/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-02-14T22:37:40Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-k6vc6
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25820"
    uid: beee8f45-758e-480d-94be-dc4ef1c7f175
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c7f7w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-c7f7w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:32:04Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://1e68c3f2fc17183637bbaf7fde7d578b5bb8fd0a0715525581ebead292b26bf2
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:55:38Z"
    hostIP: 192.168.64.21
    phase: Running
    podIP: 10.10.133.202
    podIPs:
    - ip: 10.10.133.202
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: e6adaf721f28db3a495049f6ca8dd4a27e9135eb0c748c435ba129fad6805ffd
      cni.projectcalico.org/podIP: 10.10.133.204/32
      cni.projectcalico.org/podIPs: 10.10.133.204/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-02-14T22:37:40Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-lh547
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25818"
    uid: 90019cc3-b44b-4679-b199-719e779e7a82
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ppkjj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ppkjj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:32:05Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://244dd2a15134f686bbb23e899814c7c4f9012b724dd87e15009620bef602e5e2
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:55:38Z"
    hostIP: 192.168.64.21
    phase: Running
    podIP: 10.10.133.204
    podIPs:
    - ip: 10.10.133.204
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 36984a5b1969405064629bf8cfca5663ebd9960817cfb757bd98a63e56f14440
      cni.projectcalico.org/podIP: 10.10.226.94/32
      cni.projectcalico.org/podIPs: 10.10.226.94/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-mc9xk
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "24974"
    uid: 70522f19-e4ce-4925-afcb-013aaa4465d2
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kn66x
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kn66x
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1c3a93a3dfc26e184846ffda0682e5da660f4cf5b3e433a25232eebb4cf7c973
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState:
        terminated:
          containerID: containerd://f48abaac7e2aea03ab08da6ecc73a7d6dc4ec2b8a8fea8c53d969dbcc4cf900a
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:55:38Z"
      name: nginx-deploy-container
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:57Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.94
    podIPs:
    - ip: 10.10.226.94
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 8b23a4893e12ba1ed8e3b1bff5319f74ca2f3c8178afaf4c2b4e9b7a9ac7600c
      cni.projectcalico.org/podIP: 10.10.226.105/32
      cni.projectcalico.org/podIPs: 10.10.226.105/32
    creationTimestamp: "2024-02-14T22:37:10Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-np864
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25941"
    uid: 1423328d-4234-4a17-976b-c379a1deaf00
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4fjnq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4fjnq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://868fcec03dc44ab41a0c3213be709364f4596b26db0afa3271a544b3d91d6a2b
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:37:11Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.105
    podIPs:
    - ip: 10.10.226.105
    qosClass: BestEffort
    startTime: "2024-02-14T22:37:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9f8f87d3f38ece8cef9d908036bb2d5b3bcc035dc9d2f236926415cb5b1a4f33
      cni.projectcalico.org/podIP: 10.10.226.103/32
      cni.projectcalico.org/podIPs: 10.10.226.103/32
    creationTimestamp: "2024-02-14T22:37:10Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-rqqkh
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25947"
    uid: 6ffd01cb-d5c1-4884-8943-f51027054596
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dc697
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dc697
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://384b1d25a9d04411666b8032981a79c3303d3fe08d309c06cd624d0955475c24
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:37:11Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.103
    podIPs:
    - ip: 10.10.226.103
    qosClass: BestEffort
    startTime: "2024-02-14T22:37:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: df2f891cabedf18af8cbb56691c2583efbb9c2fe6addf07d27b22059af774202
      cni.projectcalico.org/podIP: 10.10.226.93/32
      cni.projectcalico.org/podIPs: 10.10.226.93/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-sbd5l
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "24957"
    uid: 3bf303bf-ece0-4d6e-8ed4-93a155f0e887
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5x87l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-5x87l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b2b723613fc48fb18c1889e7a162d93accf04650c51f6e71fd14d4a68b0ffd39
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState:
        terminated:
          containerID: containerd://6edf20fe269d3e73a4a0a5c09bd33f4e1c020f6786d478f33d253f62dd03f739
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:55:38Z"
      name: nginx-deploy-container
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:56Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.93
    podIPs:
    - ip: 10.10.226.93
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 725b6de4604f4a3f82502a5c71e70f5c7257c73fb1faacb691271711f82b550f
      cni.projectcalico.org/podIP: 10.10.226.107/32
      cni.projectcalico.org/podIPs: 10.10.226.107/32
    creationTimestamp: "2024-02-14T22:37:10Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-sj4rr
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25945"
    uid: fed7def8-0dc8-41f1-8883-f17d2f89c4f7
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v5kjp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-v5kjp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://06cee5985263fe5fd4ba2755ee0e74754a80c338419799343870249a0f68e805
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:37:11Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.107
    podIPs:
    - ip: 10.10.226.107
    qosClass: BestEffort
    startTime: "2024-02-14T22:37:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c2fd976cbf6e1fb40978e37110260a3d3e5b4aee7029fc20eb0f2666bdcbf29f
      cni.projectcalico.org/podIP: 10.10.133.206/32
      cni.projectcalico.org/podIPs: 10.10.133.206/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    deletionGracePeriodSeconds: 30
    deletionTimestamp: "2024-02-14T22:37:40Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-tmh5z
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25827"
    uid: 607603ae-98e6-46fb-8ce3-3fce3c749d34
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwh9p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-pwh9p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:32:04Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:37:10Z"
      message: 'Taint manager: deleting due to NoExecute taint'
      reason: DeletionByTaintManager
      status: "True"
      type: DisruptionTarget
    containerStatuses:
    - containerID: containerd://59c670897809ace5b118c2550f40301068dd87ae54f3694b47e90d0c82dbd4f5
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState: {}
      name: nginx-deploy-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:55:38Z"
    hostIP: 192.168.64.21
    phase: Running
    podIP: 10.10.133.206
    podIPs:
    - ip: 10.10.133.206
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 5a315bab8674dcc5a1f0ac484a7d9378868ff306df6db2818212e9349ae106fa
      cni.projectcalico.org/podIP: 10.10.226.91/32
      cni.projectcalico.org/podIPs: 10.10.226.91/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-vf4bd
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "24956"
    uid: 38b151f5-f289-41fd-a262-a728a7d2c9fd
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pcd76
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-pcd76
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5b4dae7e1465daee94195343b200fb93766007701b14adc7cb4cf6f40e06edca
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState:
        terminated:
          containerID: containerd://4c0e34562e9c560c22f3a811b4c535f6442af25c2ae92bd21d62510152eb6a9a
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:55:38Z"
      name: nginx-deploy-container
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:56Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.91
    podIPs:
    - ip: 10.10.226.91
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: ed2d0105dca43e2bd25c0d870160f648a2e69c856171b3cbe5f4d206f761e3ea
      cni.projectcalico.org/podIP: 10.10.226.95/32
      cni.projectcalico.org/podIPs: 10.10.226.95/32
    creationTimestamp: "2024-02-14T03:55:37Z"
    generateName: nginx-deployment-86b8bb5bd-
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd-zmrdr
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-86b8bb5bd
      uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
    resourceVersion: "25000"
    uid: 0c51a190-b40a-4804-b8f0-b9a54e2f878c
  spec:
    containers:
    - image: nginx:1.19
      imagePullPolicy: IfNotPresent
      name: nginx-deploy-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ds8l2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: worker-1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ds8l2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:55:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c3db6284d2ed2bc47d39a69239b6fb050913ad716faa33eccfb7eb84d11aff73
      image: docker.io/library/nginx:1.19
      imageID: docker.io/library/nginx@sha256:df13abe416e37eb3db4722840dd479b00ba193ac6606e7902331dcea50f4f1f2
      lastState:
        terminated:
          containerID: containerd://18acccdc81346b5c0edb82d1e2a8592bca40193d5c10d8243c2b3e5cb8ca00b1
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:55:38Z"
      name: nginx-deploy-container
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:58Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 10.10.226.95
    podIPs:
    - ip: 10.10.226.95
    qosClass: BestEffort
    startTime: "2024-02-14T03:55:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 5926bf6c7675b5f1f6a4133b3c96395c6a32d0dc8a87087fe337f95ebe4eed44
      cni.projectcalico.org/podIP: 10.10.219.77/32
      cni.projectcalico.org/podIPs: 10.10.219.77/32
    creationTimestamp: "2024-02-14T00:33:57Z"
    generateName: coredns-5dd5756b68-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5dd5756b68
    name: coredns-5dd5756b68-f9xb7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-5dd5756b68
      uid: 31aa8d26-7ae0-4457-bec6-44a126d48ba3
    resourceVersion: "24865"
    uid: 2c9a5fc7-16d6-4c03-865d-13da80b7588b
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.10.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lw8x8
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: master
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-lw8x8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://95c03860badcc67f77fa13565007bd478bf12a08f69ac4b1160af07240b80a0f
      image: registry.k8s.io/coredns/coredns:v1.10.1
      imageID: registry.k8s.io/coredns/coredns@sha256:a0ead06651cf580044aeb0a0feba63591858fb2e43ade8c9dea45a6a89ae7e5e
      lastState:
        terminated:
          containerID: containerd://dd8c17fe6c84993eade2c9f09acb40fab6d48feb991de6486f037cba7091ac59
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:40:52Z"
      name: coredns
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:40Z"
    hostIP: 192.168.64.18
    phase: Running
    podIP: 10.10.219.77
    podIPs:
    - ip: 10.10.219.77
    qosClass: Burstable
    startTime: "2024-02-14T02:13:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9c5a7944a16737207cb2acffba87a8e75ac89a6c224496163e31530d2de30ceb
      cni.projectcalico.org/podIP: 10.10.219.78/32
      cni.projectcalico.org/podIPs: 10.10.219.78/32
    creationTimestamp: "2024-02-14T00:33:57Z"
    generateName: coredns-5dd5756b68-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5dd5756b68
    name: coredns-5dd5756b68-nkskb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-5dd5756b68
      uid: 31aa8d26-7ae0-4457-bec6-44a126d48ba3
    resourceVersion: "24864"
    uid: 83631cdc-5ebc-41f8-92ab-e48ea1fb88dd
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.10.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jbf5q
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: master
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-jbf5q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:13:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://32de99fb18dc390d9233d070bbd0adef02ff73f1071c52a9357f87ac41cfbded
      image: registry.k8s.io/coredns/coredns:v1.10.1
      imageID: registry.k8s.io/coredns/coredns@sha256:a0ead06651cf580044aeb0a0feba63591858fb2e43ade8c9dea45a6a89ae7e5e
      lastState:
        terminated:
          containerID: containerd://2856323e480b19bc70ae117f066752299c7d5fd6ea1da9ca4407b30a4c6227c1
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:40:52Z"
      name: coredns
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:40Z"
    hostIP: 192.168.64.18
    phase: Running
    podIP: 10.10.219.78
    podIPs:
    - ip: 10.10.219.78
    qosClass: Burstable
    startTime: "2024-02-14T02:13:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.64.18:2379
      kubernetes.io/config.hash: b266201e382a7db85cd9cf2d637d4245
      kubernetes.io/config.mirror: b266201e382a7db85cd9cf2d637d4245
      kubernetes.io/config.seen: "2024-02-13T16:33:42.729840705-08:00"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-02-14T00:33:42Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-master
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: master
      uid: ee7f49da-0f12-441a-9aa2-b28ca5fa751a
    resourceVersion: "24762"
    uid: b1dcc544-287a-4916-9d41-33c402a23633
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.64.18:2379
      - --cert-file=/etc/kubernetes/pki/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://192.168.64.18:2380
      - --initial-cluster=master=https://192.168.64.18:2380
      - --key-file=/etc/kubernetes/pki/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.64.18:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.64.18:2380
      - --name=master
      - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
      - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      - --snapshot-count=10000
      - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.9-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health?exclude=NOSPACE&serializable=true
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health?serializable=false
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/etcd
        name: etcd-data
      - mountPath: /etc/kubernetes/pki/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: master
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/pki/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c7dfe19ff9e61f04ed4071e60d803b74cf3f0a824887bd5aa23c8493a0777481
      image: registry.k8s.io/etcd:3.5.9-0
      imageID: registry.k8s.io/etcd@sha256:e013d0d5e4e25d00c61a7ff839927a1f36479678f11e49502b53a5e0b14f10c3
      lastState:
        terminated:
          containerID: containerd://1e173d63d6785ff737043854fd1d602d20c175eacb91609a6c8ffdbdefc893c9
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:40:19Z"
      name: etcd
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:06Z"
    hostIP: 192.168.64.18
    phase: Running
    podIP: 192.168.64.18
    podIPs:
    - ip: 192.168.64.18
    qosClass: Burstable
    startTime: "2024-02-14T22:30:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.64.18:6443
      kubernetes.io/config.hash: 897b64d0ad8331b602825f768d6fd3ab
      kubernetes.io/config.mirror: 897b64d0ad8331b602825f768d6fd3ab
      kubernetes.io/config.seen: "2024-02-13T16:33:42.729841705-08:00"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-02-14T00:33:42Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-master
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: master
      uid: ee7f49da-0f12-441a-9aa2-b28ca5fa751a
    resourceVersion: "24805"
    uid: 9d55c7dd-2b48-4e9c-9b9a-5390b48c5bb2
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.64.18
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --enable-admission-plugins=NodeRestriction
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
      - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
      - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
      - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
      - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=6443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/etc/kubernetes/pki/sa.pub
      - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
      - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.28.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.64.18
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.64.18
          path: /readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.64.18
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/pki
        name: etc-pki
        readOnly: true
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: master
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/pki
        type: DirectoryOrCreate
      name: etc-pki
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://eb488595e0b0f6b0c81e81702f1adcff5fe2bebaa4e20ef1ffed576623b88e79
      image: registry.k8s.io/kube-apiserver:v1.28.2
      imageID: registry.k8s.io/kube-apiserver@sha256:6beea2e5531a0606613594fd3ed92d71bbdcef99dd3237522049a0b32cad736c
      lastState:
        terminated:
          containerID: containerd://6f10e98f6eb36ddff3aa6227e8783e6df76ce47cd115dcca064936af102f0d9a
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:40:19Z"
      name: kube-apiserver
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:06Z"
    hostIP: 192.168.64.18
    phase: Running
    podIP: 192.168.64.18
    podIPs:
    - ip: 192.168.64.18
    qosClass: Burstable
    startTime: "2024-02-14T22:30:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: af7648052cec28aef78ea3039fb721c4
      kubernetes.io/config.mirror: af7648052cec28aef78ea3039fb721c4
      kubernetes.io/config.seen: "2024-02-13T16:33:42.729842330-08:00"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-02-14T00:33:42Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-master
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: master
      uid: ee7f49da-0f12-441a-9aa2-b28ca5fa751a
    resourceVersion: "25046"
    uid: 02384377-c365-455e-b5c1-57db774c2ee3
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --cluster-cidr=10.10.0.0/16
      - --cluster-name=kubernetes
      - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
      - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=true
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --root-ca-file=/etc/kubernetes/pki/ca.crt
      - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.28.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/pki
        name: etc-pki
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: master
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/pki
        type: DirectoryOrCreate
      name: etc-pki
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:31:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d4aa881e788a0267cba01f842f2ba43e59dbcacd6ec22c5405a81221604142b5
      image: registry.k8s.io/kube-controller-manager:v1.28.2
      imageID: registry.k8s.io/kube-controller-manager@sha256:6a42ce14d716205a99763f3c732c0a8f0ea041bdbbea7d2dfffcc53dafd7cac4
      lastState:
        terminated:
          containerID: containerd://5ddb335ec2a1aa1a82700c611e676d43aacec9a452366ad6e99828047fa5c0ef
          exitCode: 1
          finishedAt: "2024-02-14T22:30:37Z"
          reason: Error
          startedAt: "2024-02-14T22:30:06Z"
      name: kube-controller-manager
      ready: true
      restartCount: 9
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:56Z"
    hostIP: 192.168.64.18
    phase: Running
    podIP: 192.168.64.18
    podIPs:
    - ip: 192.168.64.18
    qosClass: Burstable
    startTime: "2024-02-14T22:30:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-02-14T00:33:56Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5cbdb8dcbd
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-rrw82
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: ee1d6a26-3756-4dee-9382-e661f12e07c1
    resourceVersion: "24612"
    uid: f73a9dda-27e2-469c-941f-718f3740b243
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - master
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.28.2
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qq5fz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: master
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-qq5fz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T00:33:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T00:33:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae316d31c56da88d97b3ab619d31af6259802afca96acc2079c284241cc8395e
      image: registry.k8s.io/kube-proxy:v1.28.2
      imageID: registry.k8s.io/kube-proxy@sha256:41c8f92d1cd571e0e36af431f35c78379f84f5daf5b85d43014a9940d697afcf
      lastState:
        terminated:
          containerID: containerd://9515809fe5f412f6567aad84067178bbb9b69ea5be9c490741c233a3b78ca8c1
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:40:21Z"
      name: kube-proxy
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:10Z"
    hostIP: 192.168.64.18
    phase: Running
    podIP: 192.168.64.18
    podIPs:
    - ip: 192.168.64.18
    qosClass: BestEffort
    startTime: "2024-02-14T00:33:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-02-14T03:20:13Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5cbdb8dcbd
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-t6lkf
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: ee1d6a26-3756-4dee-9382-e661f12e07c1
    resourceVersion: "25175"
    uid: 96177588-dc70-4a50-b6ec-73207512f528
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-2
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.28.2
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l7bhd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: worker-2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-l7bhd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:20:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:32:04Z"
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:20:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T03:20:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9f7fca9a833c42e36013989f9f863277dd27860f633d127f8dc7846557b54aa3
      image: registry.k8s.io/kube-proxy:v1.28.2
      imageID: registry.k8s.io/kube-proxy@sha256:41c8f92d1cd571e0e36af431f35c78379f84f5daf5b85d43014a9940d697afcf
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-02-14T03:20:23Z"
    hostIP: 192.168.64.21
    phase: Running
    podIP: 192.168.64.21
    podIPs:
    - ip: 192.168.64.21
    qosClass: BestEffort
    startTime: "2024-02-14T03:20:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-02-14T01:54:49Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 5cbdb8dcbd
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-xf2fh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: ee1d6a26-3756-4dee-9382-e661f12e07c1
    resourceVersion: "24750"
    uid: 705b93de-dd10-496d-8928-20f46123e043
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - worker-1
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.28.2
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dqcx5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: worker-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-dqcx5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T01:54:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T01:54:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6a30f42ab8f593466be1b12dbfc5e4ebc035fc91108df88ddb472df2a49573b5
      image: registry.k8s.io/kube-proxy:v1.28.2
      imageID: registry.k8s.io/kube-proxy@sha256:41c8f92d1cd571e0e36af431f35c78379f84f5daf5b85d43014a9940d697afcf
      lastState:
        terminated:
          containerID: containerd://8e35fb2895becb71229639d23475befc1853605db4037e97f4f252cb2911c308
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T01:54:56Z"
      name: kube-proxy
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:14Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 192.168.64.20
    podIPs:
    - ip: 192.168.64.20
    qosClass: BestEffort
    startTime: "2024-02-14T01:54:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 396020f3c209912f2accd521df0c6c85
      kubernetes.io/config.mirror: 396020f3c209912f2accd521df0c6c85
      kubernetes.io/config.seen: "2024-02-13T16:33:42.729838205-08:00"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-02-14T00:33:42Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-master
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: master
      uid: ee7f49da-0f12-441a-9aa2-b28ca5fa751a
    resourceVersion: "24755"
    uid: f8a2d094-fd44-4cc8-ae8c-fb671f08b42c
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=true
      image: registry.k8s.io/kube-scheduler:v1.28.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: master
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fddbbb5eb100d40acdfa5424639a93e524888dc5659aba1cad9085a845a05eff
      image: registry.k8s.io/kube-scheduler:v1.28.2
      imageID: registry.k8s.io/kube-scheduler@sha256:6511193f8114a2f011790619698efe12a8119ed9a17e2e36f4c1c759ccf173ab
      lastState:
        terminated:
          containerID: containerd://cc29097b621d49cd509693a77a3e98de2b1888fd8bbedba1109c101ff11b2d18
          exitCode: 255
          finishedAt: "2024-02-14T22:29:55Z"
          reason: Unknown
          startedAt: "2024-02-14T03:40:19Z"
      name: kube-scheduler
      ready: true
      restartCount: 7
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:06Z"
    hostIP: 192.168.64.18
    phase: Running
    podIP: 192.168.64.18
    podIPs:
    - ip: 192.168.64.18
    qosClass: Burstable
    startTime: "2024-02-14T22:30:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-02-14T02:12:31Z"
    generateName: tigera-operator-55585899bf-
    labels:
      k8s-app: tigera-operator
      name: tigera-operator
      pod-template-hash: 55585899bf
    name: tigera-operator-55585899bf-kcczs
    namespace: tigera-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: tigera-operator-55585899bf
      uid: e055c13d-9b94-4e33-bf95-22f89c533f58
    resourceVersion: "24975"
    uid: 5e9bd473-a74b-450d-bb57-c58995fd6476
  spec:
    containers:
    - command:
      - operator
      env:
      - name: WATCH_NAMESPACE
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OPERATOR_NAME
        value: tigera-operator
      - name: TIGERA_OPERATOR_INIT_IMAGE_VERSION
        value: v1.32.3
      envFrom:
      - configMapRef:
          name: kubernetes-services-endpoint
          optional: true
      image: quay.io/tigera/operator:v1.32.3
      imagePullPolicy: IfNotPresent
      name: tigera-operator
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/calico
        name: var-lib-calico
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8gvk
        readOnly: true
    dnsPolicy: ClusterFirstWithHostNet
    enableServiceLinks: true
    hostNetwork: true
    nodeName: worker-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: tigera-operator
    serviceAccountName: tigera-operator
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/calico
        type: ""
      name: var-lib-calico
    - name: kube-api-access-q8gvk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:12:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T22:30:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-02-14T02:12:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9f9f5e31d458b1d81cf260c696af7376f3cc106eb23b18c29e12a9b7c976c458
      image: quay.io/tigera/operator:v1.32.3
      imageID: quay.io/tigera/operator@sha256:715ac9a30f8a9579e44258af20de354715429e11836b493918e9e1a696e9b028
      lastState:
        terminated:
          containerID: containerd://1b20fd3ecfea2dac7328703ac151ca1322729118f159391fbbb88c78f7345cda
          exitCode: 1
          finishedAt: "2024-02-14T22:30:45Z"
          reason: Error
          startedAt: "2024-02-14T22:30:14Z"
      name: tigera-operator
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2024-02-14T22:30:58Z"
    hostIP: 192.168.64.20
    phase: Running
    podIP: 192.168.64.20
    podIPs:
    - ip: 192.168.64.20
    qosClass: BestEffort
    startTime: "2024-02-14T02:12:31Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-02-14T02:14:34Z"
    labels:
      k8s-app: tigera-api
    name: calico-api
    namespace: calico-apiserver
    ownerReferences:
    - apiVersion: operator.tigera.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: APIServer
      name: default
      uid: 11ce98af-4731-424c-bdd9-510a55545417
    resourceVersion: "6978"
    uid: b5dea7dd-1c06-4fab-b79b-a0c95dcf4804
  spec:
    clusterIP: 10.100.111.133
    clusterIPs:
    - 10.100.111.133
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: apiserver
      port: 443
      protocol: TCP
      targetPort: 5443
    selector:
      apiserver: "true"
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9094"
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-02-14T02:14:19Z"
    labels:
      k8s-app: calico-kube-controllers
    name: calico-kube-controllers-metrics
    namespace: calico-system
    ownerReferences:
    - apiVersion: operator.tigera.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Installation
      name: default
      uid: cce13516-3337-4321-9303-c038b7e97c1f
    resourceVersion: "6870"
    uid: e3046b13-0379-40ae-97de-5676dfd10f9f
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics-port
      port: 9094
      protocol: TCP
      targetPort: 9094
    selector:
      k8s-app: calico-kube-controllers
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-02-14T02:13:28Z"
    labels:
      k8s-app: calico-typha
    name: calico-typha
    namespace: calico-system
    ownerReferences:
    - apiVersion: operator.tigera.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Installation
      name: default
      uid: cce13516-3337-4321-9303-c038b7e97c1f
    resourceVersion: "6524"
    uid: c77c0179-ef65-41d9-a65c-78708c738526
  spec:
    clusterIP: 10.97.239.86
    clusterIPs:
    - 10.97.239.86
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: calico-typha
      port: 5473
      protocol: TCP
      targetPort: calico-typha
    selector:
      k8s-app: calico-typha
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-02-14T00:33:41Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "192"
    uid: 9b8706c8-a75f-4173-a78d-c4a5b944ae2a
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-02-14T00:33:42Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "219"
    uid: eba46919-e954-4b77-a1dc-5ac65883a382
  spec:
    clusterIP: 10.96.0.10
    clusterIPs:
    - 10.96.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2024-02-14T02:13:28Z"
    generation: 1
    name: calico-node
    namespace: calico-system
    ownerReferences:
    - apiVersion: operator.tigera.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Installation
      name: default
      uid: cce13516-3337-4321-9303-c038b7e97c1f
    resourceVersion: "25184"
    uid: 7c6d80da-dce1-444a-b139-0275e67341f1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: calico-node
    template:
      metadata:
        annotations:
          hash.operator.tigera.io/cni-config: 7c3d4f43aed6c9f83376215a5e9a368bef0902a0
          hash.operator.tigera.io/system: fdde45054a8ae4f629960ce37570929502e59449
          tigera-operator.hash.operator.tigera.io/tigera-ca-private: ab2cf664664ba80e9d276b6e112bb6990c244692
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: calico-node
          k8s-app: calico-node
      spec:
        containers:
        - env:
          - name: DATASTORE_TYPE
            value: kubernetes
          - name: WAIT_FOR_DATASTORE
            value: "true"
          - name: CLUSTER_TYPE
            value: k8s,operator,bgp
          - name: CALICO_DISABLE_FILE_LOGGING
            value: "false"
          - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
            value: ACCEPT
          - name: FELIX_HEALTHENABLED
            value: "true"
          - name: FELIX_HEALTHPORT
            value: "9099"
          - name: NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: FELIX_TYPHAK8SNAMESPACE
            value: calico-system
          - name: FELIX_TYPHAK8SSERVICENAME
            value: calico-typha
          - name: FELIX_TYPHACAFILE
            value: /etc/pki/tls/certs/tigera-ca-bundle.crt
          - name: FELIX_TYPHACERTFILE
            value: /node-certs/tls.crt
          - name: FELIX_TYPHAKEYFILE
            value: /node-certs/tls.key
          - name: FIPS_MODE_ENABLED
            value: "false"
          - name: FELIX_TYPHACN
            value: typha-server
          - name: CALICO_MANAGE_CNI
            value: "true"
          - name: CALICO_IPV4POOL_CIDR
            value: 10.10.0.0/16
          - name: CALICO_IPV4POOL_VXLAN
            value: CrossSubnet
          - name: CALICO_IPV4POOL_BLOCK_SIZE
            value: "26"
          - name: CALICO_IPV4POOL_NODE_SELECTOR
            value: all()
          - name: CALICO_IPV4POOL_DISABLE_BGP_EXPORT
            value: "false"
          - name: CALICO_NETWORKING_BACKEND
            value: bird
          - name: IP
            value: autodetect
          - name: IP_AUTODETECTION_METHOD
            value: first-found
          - name: IP6
            value: none
          - name: FELIX_IPV6SUPPORT
            value: "false"
          - name: KUBERNETES_SERVICE_HOST
            value: 10.96.0.1
          - name: KUBERNETES_SERVICE_PORT
            value: "443"
          image: docker.io/calico/node:v3.27.0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/calico-node
                - -shutdown
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /liveness
              port: 9099
              scheme: HTTP
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-node
          readinessProbe:
            exec:
              command:
              - /bin/calico-node
              - -bird-ready
              - -felix-ready
            failureThreshold: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
              - ALL
            privileged: true
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pki/tls/certs
            name: tigera-ca-bundle
            readOnly: true
          - mountPath: /etc/pki/tls/cert.pem
            name: tigera-ca-bundle
            readOnly: true
            subPath: ca-bundle.crt
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /var/run/nodeagent
            name: policysync
          - mountPath: /node-certs
            name: node-certs
            readOnly: true
          - mountPath: /var/run/calico
            name: var-run-calico
          - mountPath: /var/lib/calico
            name: var-lib-calico
          - mountPath: /var/log/calico/cni
            name: cni-log-dir
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - image: docker.io/calico/pod2daemon-flexvol:v3.27.0
          imagePullPolicy: IfNotPresent
          name: flexvol-driver
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
              - ALL
            privileged: true
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/driver
            name: flexvol-driver-host
        - command:
          - /opt/cni/bin/install
          env:
          - name: CNI_CONF_NAME
            value: 10-calico.conflist
          - name: SLEEP
            value: "false"
          - name: CNI_NET_DIR
            value: /etc/cni/net.d
          - name: CNI_NETWORK_CONFIG
            valueFrom:
              configMapKeyRef:
                key: config
                name: cni-config
          - name: KUBERNETES_SERVICE_HOST
            value: 10.96.0.1
          - name: KUBERNETES_SERVICE_PORT
            value: "443"
          image: docker.io/calico/cni:v3.27.0
          imagePullPolicy: IfNotPresent
          name: install-cni
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
              - ALL
            privileged: true
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/opt/cni/bin
            name: cni-bin-dir
          - mountPath: /host/etc/cni/net.d
            name: cni-net-dir
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-node
        serviceAccountName: calico-node
        terminationGracePeriodSeconds: 5
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        volumes:
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /var/run/nodeagent
            type: DirectoryOrCreate
          name: policysync
        - configMap:
            defaultMode: 420
            name: tigera-ca-bundle
          name: tigera-ca-bundle
        - name: node-certs
          secret:
            defaultMode: 420
            secretName: node-certs
        - hostPath:
            path: /var/run/calico
            type: ""
          name: var-run-calico
        - hostPath:
            path: /var/lib/calico
            type: ""
          name: var-lib-calico
        - hostPath:
            path: /opt/cni/bin
            type: ""
          name: cni-bin-dir
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-net-dir
        - hostPath:
            path: /var/log/calico/cni
            type: ""
          name: cni-log-dir
        - hostPath:
            path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec/nodeagent~uds
            type: DirectoryOrCreate
          name: flexvol-driver-host
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    numberUnavailable: 1
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2024-02-14T02:13:28Z"
    generation: 1
    name: csi-node-driver
    namespace: calico-system
    ownerReferences:
    - apiVersion: operator.tigera.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Installation
      name: default
      uid: cce13516-3337-4321-9303-c038b7e97c1f
    resourceVersion: "25205"
    uid: 4583c3bc-5962-4502-a28a-e53ad1788516
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: csi-node-driver
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: csi-node-driver
          k8s-app: csi-node-driver
          name: csi-node-driver
      spec:
        containers:
        - args:
          - --nodeid=$(KUBE_NODE_NAME)
          - --loglevel=$(LOG_LEVEL)
          env:
          - name: LOG_LEVEL
            value: warn
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: docker.io/calico/csi:v3.27.0
          imagePullPolicy: IfNotPresent
          name: calico-csi
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
              - ALL
            privileged: true
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run
            name: varrun
          - mountPath: /csi
            name: socket-dir
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: kubelet-dir
        - args:
          - --v=5
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/csi.tigera.io/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: docker.io/calico/node-driver-registrar:v3.27.0
          imagePullPolicy: IfNotPresent
          name: csi-node-driver-registrar
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
              - ALL
            privileged: true
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run
            type: ""
          name: varrun
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.tigera.io
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    numberUnavailable: 1
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2024-02-14T00:33:42Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "25183"
    uid: ee1d6a26-3756-4dee-9382-e661f12e07c1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /usr/local/bin/kube-proxy
          - --config=/var/lib/kube-proxy/config.conf
          - --hostname-override=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: registry.k8s.io/kube-proxy:v1.28.2
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    numberUnavailable: 1
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-02-14T02:14:34Z"
    generation: 1
    labels:
      apiserver: "true"
      app.kubernetes.io/name: calico-apiserver
      k8s-app: calico-apiserver
    name: calico-apiserver
    namespace: calico-apiserver
    ownerReferences:
    - apiVersion: operator.tigera.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: APIServer
      name: default
      uid: 11ce98af-4731-424c-bdd9-510a55545417
    resourceVersion: "17314"
    uid: a5ba7c47-eb2f-4a11-a0b1-55291ad9f9d1
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        apiserver: "true"
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          tigera-operator.hash.operator.tigera.io/calico-apiserver-certs: db71ef27acfbbe899da98686c2845f13eb3410b2
        creationTimestamp: null
        labels:
          apiserver: "true"
          app.kubernetes.io/name: calico-apiserver
          k8s-app: calico-apiserver
        name: calico-apiserver
        namespace: calico-apiserver
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    k8s-app: calico-apiserver
                namespaces:
                - calico-apiserver
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    k8s-app: calico-apiserver
                namespaces:
                - calico-apiserver
                topologyKey: topology.kubernetes.io/zone
              weight: 100
        containers:
        - args:
          - --secure-port=5443
          - --tls-private-key-file=/calico-apiserver-certs/tls.key
          - --tls-cert-file=/calico-apiserver-certs/tls.crt
          env:
          - name: DATASTORE_TYPE
            value: kubernetes
          - name: KUBERNETES_SERVICE_HOST
            value: 10.96.0.1
          - name: KUBERNETES_SERVICE_PORT
            value: "443"
          - name: MULTI_INTERFACE_MODE
            value: none
          image: docker.io/calico/apiserver:v3.27.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /version
              port: 5443
              scheme: HTTPS
            initialDelaySeconds: 90
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-apiserver
          readinessProbe:
            exec:
              command:
              - /code/filecheck
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /calico-apiserver-certs
            name: calico-apiserver-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-apiserver
        serviceAccountName: calico-apiserver
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - name: calico-apiserver-certs
          secret:
            defaultMode: 420
            secretName: calico-apiserver-certs
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2024-02-14T02:14:34Z"
      lastUpdateTime: "2024-02-14T02:15:06Z"
      message: ReplicaSet "calico-apiserver-fbdc69d9b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-02-14T03:41:37Z"
      lastUpdateTime: "2024-02-14T03:41:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-02-14T02:13:28Z"
    generation: 1
    labels:
      app.kubernetes.io/name: calico-kube-controllers
      k8s-app: calico-kube-controllers
    name: calico-kube-controllers
    namespace: calico-system
    ownerReferences:
    - apiVersion: operator.tigera.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Installation
      name: default
      uid: cce13516-3337-4321-9303-c038b7e97c1f
    resourceVersion: "6880"
    uid: 9ab2695b-f39e-484b-9f1d-798470670de5
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: calico-kube-controllers
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          hash.operator.tigera.io/system: fdde45054a8ae4f629960ce37570929502e59449
          tigera-operator.hash.operator.tigera.io/tigera-ca-private: ab2cf664664ba80e9d276b6e112bb6990c244692
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: calico-kube-controllers
          k8s-app: calico-kube-controllers
        name: calico-kube-controllers
        namespace: calico-system
      spec:
        containers:
        - env:
          - name: KUBE_CONTROLLERS_CONFIG_NAME
            value: default
          - name: DATASTORE_TYPE
            value: kubernetes
          - name: ENABLED_CONTROLLERS
            value: node
          - name: FIPS_MODE_ENABLED
            value: "false"
          - name: KUBERNETES_SERVICE_HOST
            value: 10.96.0.1
          - name: KUBERNETES_SERVICE_PORT
            value: "443"
          - name: CA_CRT_PATH
            value: /etc/pki/tls/certs/tigera-ca-bundle.crt
          image: docker.io/calico/kube-controllers:v3.27.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -l
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-kube-controllers
          readinessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -r
            failureThreshold: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 999
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pki/tls/certs
            name: tigera-ca-bundle
            readOnly: true
          - mountPath: /etc/pki/tls/cert.pem
            name: tigera-ca-bundle
            readOnly: true
            subPath: ca-bundle.crt
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-kube-controllers
        serviceAccountName: calico-kube-controllers
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: tigera-ca-bundle
          name: tigera-ca-bundle
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-02-14T02:14:19Z"
      lastUpdateTime: "2024-02-14T02:14:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-02-14T02:13:28Z"
      lastUpdateTime: "2024-02-14T02:14:19Z"
      message: ReplicaSet "calico-kube-controllers-588c6b944d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-02-14T02:13:28Z"
    generation: 4
    labels:
      app.kubernetes.io/name: calico-typha
      k8s-app: calico-typha
    name: calico-typha
    namespace: calico-system
    ownerReferences:
    - apiVersion: operator.tigera.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Installation
      name: default
      uid: cce13516-3337-4321-9303-c038b7e97c1f
    resourceVersion: "25195"
    uid: 82795a9c-2008-46b2-adc1-3ac84094257d
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: calico-typha
    strategy:
      rollingUpdate:
        maxSurge: 100%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          hash.operator.tigera.io/system: fdde45054a8ae4f629960ce37570929502e59449
          tigera-operator.hash.operator.tigera.io/tigera-ca-private: ab2cf664664ba80e9d276b6e112bb6990c244692
          tigera-operator.hash.operator.tigera.io/typha-certs: a793e30169cd9554662e6bfa23593285876a191a
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: calico-typha
          k8s-app: calico-typha
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - calico-typha
                topologyKey: topology.kubernetes.io/zone
              weight: 1
        containers:
        - env:
          - name: TYPHA_LOGSEVERITYSCREEN
            value: info
          - name: TYPHA_LOGFILEPATH
            value: none
          - name: TYPHA_LOGSEVERITYSYS
            value: none
          - name: TYPHA_CONNECTIONREBALANCINGMODE
            value: kubernetes
          - name: TYPHA_DATASTORETYPE
            value: kubernetes
          - name: TYPHA_HEALTHENABLED
            value: "true"
          - name: TYPHA_HEALTHPORT
            value: "9098"
          - name: TYPHA_K8SNAMESPACE
            value: calico-system
          - name: TYPHA_CAFILE
            value: /etc/pki/tls/certs/tigera-ca-bundle.crt
          - name: TYPHA_SERVERCERTFILE
            value: /typha-certs/tls.crt
          - name: TYPHA_SERVERKEYFILE
            value: /typha-certs/tls.key
          - name: TYPHA_FIPSMODEENABLED
            value: "false"
          - name: TYPHA_SHUTDOWNTIMEOUTSECS
            value: "300"
          - name: TYPHA_CLIENTCN
            value: typha-client
          - name: KUBERNETES_SERVICE_HOST
            value: 10.96.0.1
          - name: KUBERNETES_SERVICE_PORT
            value: "443"
          image: docker.io/calico/typha:v3.27.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /liveness
              port: 9098
              scheme: HTTP
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-typha
          ports:
          - containerPort: 5473
            name: calico-typha
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /readiness
              port: 9098
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pki/tls/certs
            name: tigera-ca-bundle
            readOnly: true
          - mountPath: /etc/pki/tls/cert.pem
            name: tigera-ca-bundle
            readOnly: true
            subPath: ca-bundle.crt
          - mountPath: /typha-certs
            name: typha-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-typha
        serviceAccountName: calico-typha
        terminationGracePeriodSeconds: 300
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: tigera-ca-bundle
          name: tigera-ca-bundle
        - name: typha-certs
          secret:
            defaultMode: 420
            secretName: typha-certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-02-14T02:13:28Z"
      lastUpdateTime: "2024-02-14T02:13:35Z"
      message: ReplicaSet "calico-typha-6575569d7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-02-14T03:41:37Z"
      lastUpdateTime: "2024-02-14T03:41:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 4
    readyReplicas: 1
    replicas: 2
    unavailableReplicas: 1
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"nginx"},"name":"nginx-deployment","namespace":"dev"},"spec":{"replicas":16,"selector":{"matchLabels":{"type":"front-end"}},"template":{"metadata":{"labels":{"type":"front-end"}},"spec":{"containers":[{"image":"nginx:1.19","name":"nginx-deploy-container"}]}}}}
    creationTimestamp: "2024-02-14T03:45:39Z"
    generation: 3
    labels:
      app: nginx
    name: nginx-deployment
    namespace: dev
    resourceVersion: "25953"
    uid: 628b6eba-6fae-4754-bf79-78c230e6a07d
  spec:
    progressDeadlineSeconds: 600
    replicas: 16
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        type: front-end
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          type: front-end
      spec:
        containers:
        - image: nginx:1.19
          imagePullPolicy: IfNotPresent
          name: nginx-deploy-container
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 16
    conditions:
    - lastTransitionTime: "2024-02-14T03:45:39Z"
      lastUpdateTime: "2024-02-14T03:45:58Z"
      message: ReplicaSet "nginx-deployment-86b8bb5bd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-02-14T22:37:11Z"
      lastUpdateTime: "2024-02-14T22:37:11Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 16
    replicas: 16
    updatedReplicas: 16
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-02-14T00:33:42Z"
    generation: 1
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "6903"
    uid: 1e948166-d334-4f6c-b0af-d26961b57055
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.10.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2024-02-14T02:14:13Z"
      lastUpdateTime: "2024-02-14T02:14:13Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-02-14T02:14:13Z"
      lastUpdateTime: "2024-02-14T02:14:22Z"
      message: ReplicaSet "coredns-5dd5756b68" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-02-14T02:12:31Z"
    generation: 1
    labels:
      k8s-app: tigera-operator
    name: tigera-operator
    namespace: tigera-operator
    resourceVersion: "17312"
    uid: aa0a5cc9-2917-4c28-8c83-f2c221f13508
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: tigera-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: tigera-operator
          name: tigera-operator
      spec:
        containers:
        - command:
          - operator
          env:
          - name: WATCH_NAMESPACE
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: tigera-operator
          - name: TIGERA_OPERATOR_INIT_IMAGE_VERSION
            value: v1.32.3
          envFrom:
          - configMapRef:
              name: kubernetes-services-endpoint
              optional: true
          image: quay.io/tigera/operator:v1.32.3
          imagePullPolicy: IfNotPresent
          name: tigera-operator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/calico
            name: var-lib-calico
            readOnly: true
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: tigera-operator
        serviceAccountName: tigera-operator
        terminationGracePeriodSeconds: 60
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/calico
            type: ""
          name: var-lib-calico
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-02-14T02:12:31Z"
      lastUpdateTime: "2024-02-14T02:12:37Z"
      message: ReplicaSet "tigera-operator-55585899bf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-02-14T03:41:37Z"
      lastUpdateTime: "2024-02-14T03:41:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-02-14T02:14:34Z"
    generation: 1
    labels:
      apiserver: "true"
      app.kubernetes.io/name: calico-apiserver
      k8s-app: calico-apiserver
      pod-template-hash: fbdc69d9b
    name: calico-apiserver-fbdc69d9b
    namespace: calico-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: calico-apiserver
      uid: a5ba7c47-eb2f-4a11-a0b1-55291ad9f9d1
    resourceVersion: "17304"
    uid: ace021ba-56fd-4a33-9f68-868f94874adf
  spec:
    replicas: 2
    selector:
      matchLabels:
        apiserver: "true"
        pod-template-hash: fbdc69d9b
    template:
      metadata:
        annotations:
          tigera-operator.hash.operator.tigera.io/calico-apiserver-certs: db71ef27acfbbe899da98686c2845f13eb3410b2
        creationTimestamp: null
        labels:
          apiserver: "true"
          app.kubernetes.io/name: calico-apiserver
          k8s-app: calico-apiserver
          pod-template-hash: fbdc69d9b
        name: calico-apiserver
        namespace: calico-apiserver
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    k8s-app: calico-apiserver
                namespaces:
                - calico-apiserver
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    k8s-app: calico-apiserver
                namespaces:
                - calico-apiserver
                topologyKey: topology.kubernetes.io/zone
              weight: 100
        containers:
        - args:
          - --secure-port=5443
          - --tls-private-key-file=/calico-apiserver-certs/tls.key
          - --tls-cert-file=/calico-apiserver-certs/tls.crt
          env:
          - name: DATASTORE_TYPE
            value: kubernetes
          - name: KUBERNETES_SERVICE_HOST
            value: 10.96.0.1
          - name: KUBERNETES_SERVICE_PORT
            value: "443"
          - name: MULTI_INTERFACE_MODE
            value: none
          image: docker.io/calico/apiserver:v3.27.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /version
              port: 5443
              scheme: HTTPS
            initialDelaySeconds: 90
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-apiserver
          readinessProbe:
            exec:
              command:
              - /code/filecheck
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /calico-apiserver-certs
            name: calico-apiserver-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-apiserver
        serviceAccountName: calico-apiserver
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - name: calico-apiserver-certs
          secret:
            defaultMode: 420
            secretName: calico-apiserver-certs
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-02-14T02:13:28Z"
    generation: 1
    labels:
      app.kubernetes.io/name: calico-kube-controllers
      k8s-app: calico-kube-controllers
      pod-template-hash: 588c6b944d
    name: calico-kube-controllers-588c6b944d
    namespace: calico-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: calico-kube-controllers
      uid: 9ab2695b-f39e-484b-9f1d-798470670de5
    resourceVersion: "6879"
    uid: 28ad36bd-c781-4727-b5a0-dda22cf4390f
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: calico-kube-controllers
        pod-template-hash: 588c6b944d
    template:
      metadata:
        annotations:
          hash.operator.tigera.io/system: fdde45054a8ae4f629960ce37570929502e59449
          tigera-operator.hash.operator.tigera.io/tigera-ca-private: ab2cf664664ba80e9d276b6e112bb6990c244692
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: calico-kube-controllers
          k8s-app: calico-kube-controllers
          pod-template-hash: 588c6b944d
        name: calico-kube-controllers
        namespace: calico-system
      spec:
        containers:
        - env:
          - name: KUBE_CONTROLLERS_CONFIG_NAME
            value: default
          - name: DATASTORE_TYPE
            value: kubernetes
          - name: ENABLED_CONTROLLERS
            value: node
          - name: FIPS_MODE_ENABLED
            value: "false"
          - name: KUBERNETES_SERVICE_HOST
            value: 10.96.0.1
          - name: KUBERNETES_SERVICE_PORT
            value: "443"
          - name: CA_CRT_PATH
            value: /etc/pki/tls/certs/tigera-ca-bundle.crt
          image: docker.io/calico/kube-controllers:v3.27.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -l
            failureThreshold: 6
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-kube-controllers
          readinessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -r
            failureThreshold: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 999
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pki/tls/certs
            name: tigera-ca-bundle
            readOnly: true
          - mountPath: /etc/pki/tls/cert.pem
            name: tigera-ca-bundle
            readOnly: true
            subPath: ca-bundle.crt
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-kube-controllers
        serviceAccountName: calico-kube-controllers
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: tigera-ca-bundle
          name: tigera-ca-bundle
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-02-14T02:13:28Z"
    generation: 4
    labels:
      app.kubernetes.io/name: calico-typha
      k8s-app: calico-typha
      pod-template-hash: 6575569d7
    name: calico-typha-6575569d7
    namespace: calico-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: calico-typha
      uid: 82795a9c-2008-46b2-adc1-3ac84094257d
    resourceVersion: "25189"
    uid: e9f02581-0bd3-47be-916c-cee023058fcc
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: calico-typha
        pod-template-hash: 6575569d7
    template:
      metadata:
        annotations:
          hash.operator.tigera.io/system: fdde45054a8ae4f629960ce37570929502e59449
          tigera-operator.hash.operator.tigera.io/tigera-ca-private: ab2cf664664ba80e9d276b6e112bb6990c244692
          tigera-operator.hash.operator.tigera.io/typha-certs: a793e30169cd9554662e6bfa23593285876a191a
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: calico-typha
          k8s-app: calico-typha
          pod-template-hash: 6575569d7
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - calico-typha
                topologyKey: topology.kubernetes.io/zone
              weight: 1
        containers:
        - env:
          - name: TYPHA_LOGSEVERITYSCREEN
            value: info
          - name: TYPHA_LOGFILEPATH
            value: none
          - name: TYPHA_LOGSEVERITYSYS
            value: none
          - name: TYPHA_CONNECTIONREBALANCINGMODE
            value: kubernetes
          - name: TYPHA_DATASTORETYPE
            value: kubernetes
          - name: TYPHA_HEALTHENABLED
            value: "true"
          - name: TYPHA_HEALTHPORT
            value: "9098"
          - name: TYPHA_K8SNAMESPACE
            value: calico-system
          - name: TYPHA_CAFILE
            value: /etc/pki/tls/certs/tigera-ca-bundle.crt
          - name: TYPHA_SERVERCERTFILE
            value: /typha-certs/tls.crt
          - name: TYPHA_SERVERKEYFILE
            value: /typha-certs/tls.key
          - name: TYPHA_FIPSMODEENABLED
            value: "false"
          - name: TYPHA_SHUTDOWNTIMEOUTSECS
            value: "300"
          - name: TYPHA_CLIENTCN
            value: typha-client
          - name: KUBERNETES_SERVICE_HOST
            value: 10.96.0.1
          - name: KUBERNETES_SERVICE_PORT
            value: "443"
          image: docker.io/calico/typha:v3.27.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /liveness
              port: 9098
              scheme: HTTP
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          name: calico-typha
          ports:
          - containerPort: 5473
            name: calico-typha
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: localhost
              path: /readiness
              port: 9098
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/pki/tls/certs
            name: tigera-ca-bundle
            readOnly: true
          - mountPath: /etc/pki/tls/cert.pem
            name: tigera-ca-bundle
            readOnly: true
            subPath: ca-bundle.crt
          - mountPath: /typha-certs
            name: typha-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: calico-typha
        serviceAccountName: calico-typha
        terminationGracePeriodSeconds: 300
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: tigera-ca-bundle
          name: tigera-ca-bundle
        - name: typha-certs
          secret:
            defaultMode: 420
            secretName: typha-certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 2
    observedGeneration: 4
    readyReplicas: 1
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "16"
      deployment.kubernetes.io/max-replicas: "20"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-02-14T03:45:39Z"
    generation: 3
    labels:
      pod-template-hash: 86b8bb5bd
      type: front-end
    name: nginx-deployment-86b8bb5bd
    namespace: dev
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx-deployment
      uid: 628b6eba-6fae-4754-bf79-78c230e6a07d
    resourceVersion: "25952"
    uid: 7b97599e-e1b8-45cd-85fa-1dc01ba94de7
  spec:
    replicas: 16
    selector:
      matchLabels:
        pod-template-hash: 86b8bb5bd
        type: front-end
    template:
      metadata:
        creationTimestamp: null
        labels:
          pod-template-hash: 86b8bb5bd
          type: front-end
      spec:
        containers:
        - image: nginx:1.19
          imagePullPolicy: IfNotPresent
          name: nginx-deploy-container
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 16
    fullyLabeledReplicas: 16
    observedGeneration: 3
    readyReplicas: 16
    replicas: 16
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-02-14T00:33:57Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5dd5756b68
    name: coredns-5dd5756b68
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 1e948166-d334-4f6c-b0af-d26961b57055
    resourceVersion: "6902"
    uid: 31aa8d26-7ae0-4457-bec6-44a126d48ba3
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 5dd5756b68
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 5dd5756b68
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.10.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-02-14T02:12:31Z"
    generation: 1
    labels:
      k8s-app: tigera-operator
      name: tigera-operator
      pod-template-hash: 55585899bf
    name: tigera-operator-55585899bf
    namespace: tigera-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: tigera-operator
      uid: aa0a5cc9-2917-4c28-8c83-f2c221f13508
    resourceVersion: "17306"
    uid: e055c13d-9b94-4e33-bf95-22f89c533f58
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: tigera-operator
        pod-template-hash: 55585899bf
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: tigera-operator
          name: tigera-operator
          pod-template-hash: 55585899bf
      spec:
        containers:
        - command:
          - operator
          env:
          - name: WATCH_NAMESPACE
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: OPERATOR_NAME
            value: tigera-operator
          - name: TIGERA_OPERATOR_INIT_IMAGE_VERSION
            value: v1.32.3
          envFrom:
          - configMapRef:
              name: kubernetes-services-endpoint
              optional: true
          image: quay.io/tigera/operator:v1.32.3
          imagePullPolicy: IfNotPresent
          name: tigera-operator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/calico
            name: var-lib-calico
            readOnly: true
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: tigera-operator
        serviceAccountName: tigera-operator
        terminationGracePeriodSeconds: 60
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/calico
            type: ""
          name: var-lib-calico
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
